        -:    0:Source:C:/Users/saahi/AppData/Local/Programs/CLion/bin/mingw/lib/gcc/x86_64-w64-mingw32/13.1.0/include/c++/x86_64-w64-mingw32/bits/c++config.h
        -:    0:Graph:C:\Users\saahi\CLionProjects\commandLineTool\cmake-build-debug-coverage\CMakeFiles\commandLineTool.dir\src\main.cpp.gcno
        -:    0:Data:C:\Users\saahi\CLionProjects\commandLineTool\cmake-build-debug-coverage\CMakeFiles\commandLineTool.dir\src\main.cpp.gcda
        -:    0:Runs:1
        -:    1:// Predefined symbols and macros -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 1997-2023 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file bits/c++config.h
        -:   26: *  This is an internal header file, included by other library headers.
        -:   27: *  Do not attempt to use it directly. @headername{version}
        -:   28: */
        -:   29:
        -:   30:#ifndef _GLIBCXX_CXX_CONFIG_H
        -:   31:#define _GLIBCXX_CXX_CONFIG_H 1
        -:   32:
        -:   33:// The major release number for the GCC release the C++ library belongs to.
        -:   34:#define _GLIBCXX_RELEASE 13
        -:   35:
        -:   36:// The datestamp of the C++ library in compressed ISO date format.
        -:   37:#define __GLIBCXX__ 20230426
        -:   38:
        -:   39:// Macros for various attributes.
        -:   40://   _GLIBCXX_PURE
        -:   41://   _GLIBCXX_CONST
        -:   42://   _GLIBCXX_NORETURN
        -:   43://   _GLIBCXX_NOTHROW
        -:   44://   _GLIBCXX_VISIBILITY
        -:   45:#ifndef _GLIBCXX_PURE
        -:   46:# define _GLIBCXX_PURE __attribute__ ((__pure__))
        -:   47:#endif
        -:   48:
        -:   49:#ifndef _GLIBCXX_CONST
        -:   50:# define _GLIBCXX_CONST __attribute__ ((__const__))
        -:   51:#endif
        -:   52:
        -:   53:#ifndef _GLIBCXX_NORETURN
        -:   54:# define _GLIBCXX_NORETURN __attribute__ ((__noreturn__))
        -:   55:#endif
        -:   56:
        -:   57:// See below for C++
        -:   58:#ifndef _GLIBCXX_NOTHROW
        -:   59:# ifndef __cplusplus
        -:   60:#  define _GLIBCXX_NOTHROW __attribute__((__nothrow__))
        -:   61:# endif
        -:   62:#endif
        -:   63:
        -:   64:// Macros for visibility attributes.
        -:   65://   _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY
        -:   66://   _GLIBCXX_VISIBILITY
        -:   67:# define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 0
        -:   68:
        -:   69:#if _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY
        -:   70:# define _GLIBCXX_VISIBILITY(V) __attribute__ ((__visibility__ (#V)))
        -:   71:#else
        -:   72:// If this is not supplied by the OS-specific or CPU-specific
        -:   73:// headers included below, it will be defined to an empty default.
        -:   74:# define _GLIBCXX_VISIBILITY(V) _GLIBCXX_PSEUDO_VISIBILITY(V)
        -:   75:#endif
        -:   76:
        -:   77:// Macros for deprecated attributes.
        -:   78://   _GLIBCXX_USE_DEPRECATED
        -:   79://   _GLIBCXX_DEPRECATED
        -:   80://   _GLIBCXX_DEPRECATED_SUGGEST( string-literal )
        -:   81://   _GLIBCXX11_DEPRECATED
        -:   82://   _GLIBCXX11_DEPRECATED_SUGGEST( string-literal )
        -:   83://   _GLIBCXX14_DEPRECATED
        -:   84://   _GLIBCXX14_DEPRECATED_SUGGEST( string-literal )
        -:   85://   _GLIBCXX17_DEPRECATED
        -:   86://   _GLIBCXX17_DEPRECATED_SUGGEST( string-literal )
        -:   87://   _GLIBCXX20_DEPRECATED
        -:   88://   _GLIBCXX20_DEPRECATED_SUGGEST( string-literal )
        -:   89://   _GLIBCXX23_DEPRECATED
        -:   90://   _GLIBCXX23_DEPRECATED_SUGGEST( string-literal )
        -:   91:#ifndef _GLIBCXX_USE_DEPRECATED
        -:   92:# define _GLIBCXX_USE_DEPRECATED 1
        -:   93:#endif
        -:   94:
        -:   95:#if defined(__DEPRECATED)
        -:   96:# define _GLIBCXX_DEPRECATED __attribute__ ((__deprecated__))
        -:   97:# define _GLIBCXX_DEPRECATED_SUGGEST(ALT) \
        -:   98:  __attribute__ ((__deprecated__ ("use '" ALT "' instead")))
        -:   99:#else
        -:  100:# define _GLIBCXX_DEPRECATED
        -:  101:# define _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  102:#endif
        -:  103:
        -:  104:#if defined(__DEPRECATED) && (__cplusplus >= 201103L)
        -:  105:# define _GLIBCXX11_DEPRECATED _GLIBCXX_DEPRECATED
        -:  106:# define _GLIBCXX11_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  107:#else
        -:  108:# define _GLIBCXX11_DEPRECATED
        -:  109:# define _GLIBCXX11_DEPRECATED_SUGGEST(ALT)
        -:  110:#endif
        -:  111:
        -:  112:#if defined(__DEPRECATED) && (__cplusplus >= 201402L)
        -:  113:# define _GLIBCXX14_DEPRECATED _GLIBCXX_DEPRECATED
        -:  114:# define _GLIBCXX14_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  115:#else
        -:  116:# define _GLIBCXX14_DEPRECATED
        -:  117:# define _GLIBCXX14_DEPRECATED_SUGGEST(ALT)
        -:  118:#endif
        -:  119:
        -:  120:#if defined(__DEPRECATED) && (__cplusplus >= 201703L)
        -:  121:# define _GLIBCXX17_DEPRECATED [[__deprecated__]]
        -:  122:# define _GLIBCXX17_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  123:#else
        -:  124:# define _GLIBCXX17_DEPRECATED
        -:  125:# define _GLIBCXX17_DEPRECATED_SUGGEST(ALT)
        -:  126:#endif
        -:  127:
        -:  128:#if defined(__DEPRECATED) && (__cplusplus >= 202002L)
        -:  129:# define _GLIBCXX20_DEPRECATED [[__deprecated__]]
        -:  130:# define _GLIBCXX20_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  131:#else
        -:  132:# define _GLIBCXX20_DEPRECATED
        -:  133:# define _GLIBCXX20_DEPRECATED_SUGGEST(ALT)
        -:  134:#endif
        -:  135:
        -:  136:#if defined(__DEPRECATED) && (__cplusplus >= 202100L)
        -:  137:# define _GLIBCXX23_DEPRECATED [[__deprecated__]]
        -:  138:# define _GLIBCXX23_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  139:#else
        -:  140:# define _GLIBCXX23_DEPRECATED
        -:  141:# define _GLIBCXX23_DEPRECATED_SUGGEST(ALT)
        -:  142:#endif
        -:  143:
        -:  144:// Macros for ABI tag attributes.
        -:  145:#ifndef _GLIBCXX_ABI_TAG_CXX11
        -:  146:# define _GLIBCXX_ABI_TAG_CXX11 __attribute ((__abi_tag__ ("cxx11")))
        -:  147:#endif
        -:  148:
        -:  149:// Macro to warn about unused results.
        -:  150:#if __cplusplus >= 201703L
        -:  151:# define _GLIBCXX_NODISCARD [[__nodiscard__]]
        -:  152:#else
        -:  153:# define _GLIBCXX_NODISCARD
        -:  154:#endif
        -:  155:
        -:  156:
        -:  157:
        -:  158:#if __cplusplus
        -:  159:
        -:  160:// Macro for constexpr, to support in mixed 03/0x mode.
        -:  161:#ifndef _GLIBCXX_CONSTEXPR
        -:  162:# if __cplusplus >= 201103L
        -:  163:#  define _GLIBCXX_CONSTEXPR constexpr
        -:  164:#  define _GLIBCXX_USE_CONSTEXPR constexpr
        -:  165:# else
        -:  166:#  define _GLIBCXX_CONSTEXPR
        -:  167:#  define _GLIBCXX_USE_CONSTEXPR const
        -:  168:# endif
        -:  169:#endif
        -:  170:
        -:  171:#ifndef _GLIBCXX14_CONSTEXPR
        -:  172:# if __cplusplus >= 201402L
        -:  173:#  define _GLIBCXX14_CONSTEXPR constexpr
        -:  174:# else
        -:  175:#  define _GLIBCXX14_CONSTEXPR
        -:  176:# endif
        -:  177:#endif
        -:  178:
        -:  179:#ifndef _GLIBCXX17_CONSTEXPR
        -:  180:# if __cplusplus >= 201703L
        -:  181:#  define _GLIBCXX17_CONSTEXPR constexpr
        -:  182:# else
        -:  183:#  define _GLIBCXX17_CONSTEXPR
        -:  184:# endif
        -:  185:#endif
        -:  186:
        -:  187:#ifndef _GLIBCXX20_CONSTEXPR
        -:  188:# if __cplusplus >= 202002L
        -:  189:#  define _GLIBCXX20_CONSTEXPR constexpr
        -:  190:# else
        -:  191:#  define _GLIBCXX20_CONSTEXPR
        -:  192:# endif
        -:  193:#endif
        -:  194:
        -:  195:#ifndef _GLIBCXX23_CONSTEXPR
        -:  196:# if __cplusplus >= 202100L
        -:  197:#  define _GLIBCXX23_CONSTEXPR constexpr
        -:  198:# else
        -:  199:#  define _GLIBCXX23_CONSTEXPR
        -:  200:# endif
        -:  201:#endif
        -:  202:
        -:  203:#ifndef _GLIBCXX17_INLINE
        -:  204:# if __cplusplus >= 201703L
        -:  205:#  define _GLIBCXX17_INLINE inline
        -:  206:# else
        -:  207:#  define _GLIBCXX17_INLINE
        -:  208:# endif
        -:  209:#endif
        -:  210:
        -:  211:// Macro for noexcept, to support in mixed 03/0x mode.
        -:  212:#ifndef _GLIBCXX_NOEXCEPT
        -:  213:# if __cplusplus >= 201103L
        -:  214:#  define _GLIBCXX_NOEXCEPT noexcept
        -:  215:#  define _GLIBCXX_NOEXCEPT_IF(...) noexcept(__VA_ARGS__)
        -:  216:#  define _GLIBCXX_USE_NOEXCEPT noexcept
        -:  217:#  define _GLIBCXX_THROW(_EXC)
        -:  218:# else
        -:  219:#  define _GLIBCXX_NOEXCEPT
        -:  220:#  define _GLIBCXX_NOEXCEPT_IF(...)
        -:  221:#  define _GLIBCXX_USE_NOEXCEPT throw()
        -:  222:#  define _GLIBCXX_THROW(_EXC) throw(_EXC)
        -:  223:# endif
        -:  224:#endif
        -:  225:
        -:  226:#ifndef _GLIBCXX_NOTHROW
        -:  227:# define _GLIBCXX_NOTHROW _GLIBCXX_USE_NOEXCEPT
        -:  228:#endif
        -:  229:
        -:  230:#ifndef _GLIBCXX_THROW_OR_ABORT
        -:  231:# if __cpp_exceptions
        -:  232:#  define _GLIBCXX_THROW_OR_ABORT(_EXC) (throw (_EXC))
        -:  233:# else
        -:  234:#  define _GLIBCXX_THROW_OR_ABORT(_EXC) (__builtin_abort())
        -:  235:# endif
        -:  236:#endif
        -:  237:
        -:  238:#if __cpp_noexcept_function_type
        -:  239:#define _GLIBCXX_NOEXCEPT_PARM , bool _NE
        -:  240:#define _GLIBCXX_NOEXCEPT_QUAL noexcept (_NE)
        -:  241:#else
        -:  242:#define _GLIBCXX_NOEXCEPT_PARM
        -:  243:#define _GLIBCXX_NOEXCEPT_QUAL
        -:  244:#endif
        -:  245:
        -:  246:// Macro for extern template, ie controlling template linkage via use
        -:  247:// of extern keyword on template declaration. As documented in the g++
        -:  248:// manual, it inhibits all implicit instantiations and is used
        -:  249:// throughout the library to avoid multiple weak definitions for
        -:  250:// required types that are already explicitly instantiated in the
        -:  251:// library binary. This substantially reduces the binary size of
        -:  252:// resulting executables.
        -:  253:// Special case: _GLIBCXX_EXTERN_TEMPLATE == -1 disallows extern
        -:  254:// templates only in basic_string, thus activating its debug-mode
        -:  255:// checks even at -O0.
        -:  256:# define _GLIBCXX_EXTERN_TEMPLATE 1
        -:  257:
        -:  258:/*
        -:  259:  Outline of libstdc++ namespaces.
        -:  260:
        -:  261:  namespace std
        -:  262:  {
        -:  263:    namespace __debug { }
        -:  264:    namespace __parallel { }
        -:  265:    namespace __cxx1998 { }
        -:  266:
        -:  267:    namespace __detail {
        -:  268:      namespace __variant { }				// C++17
        -:  269:    }
        -:  270:
        -:  271:    namespace rel_ops { }
        -:  272:
        -:  273:    namespace tr1
        -:  274:    {
        -:  275:      namespace placeholders { }
        -:  276:      namespace regex_constants { }
        -:  277:      namespace __detail { }
        -:  278:    }
        -:  279:
        -:  280:    namespace tr2 { }
        -:  281:    
        -:  282:    namespace decimal { }
        -:  283:
        -:  284:    namespace chrono { }				// C++11
        -:  285:    namespace placeholders { }				// C++11
        -:  286:    namespace regex_constants { }			// C++11
        -:  287:    namespace this_thread { }				// C++11
        -:  288:    inline namespace literals {				// C++14
        -:  289:      inline namespace chrono_literals { }		// C++14
        -:  290:      inline namespace complex_literals { }		// C++14
        -:  291:      inline namespace string_literals { }		// C++14
        -:  292:      inline namespace string_view_literals { }		// C++17
        -:  293:    }
        -:  294:  }
        -:  295:
        -:  296:  namespace abi { }
        -:  297:
        -:  298:  namespace __gnu_cxx
        -:  299:  {
        -:  300:    namespace __detail { }
        -:  301:  }
        -:  302:
        -:  303:  For full details see:
        -:  304:  http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html
        -:  305:*/
        -:  306:namespace std
        -:  307:{
        -:  308:  typedef __SIZE_TYPE__ 	size_t;
        -:  309:  typedef __PTRDIFF_TYPE__	ptrdiff_t;
        -:  310:
        -:  311:#if __cplusplus >= 201103L
        -:  312:  typedef decltype(nullptr)	nullptr_t;
        -:  313:#endif
        -:  314:
        -:  315:#pragma GCC visibility push(default)
        -:  316:  // This allows the library to terminate without including all of <exception>
        -:  317:  // and without making the declaration of std::terminate visible to users.
        -:  318:  extern "C++" __attribute__ ((__noreturn__, __always_inline__))
        -:  319:  inline void __terminate() _GLIBCXX_USE_NOEXCEPT
        -:  320:  {
        -:  321:    void terminate() _GLIBCXX_USE_NOEXCEPT __attribute__ ((__noreturn__));
        -:  322:    terminate();
        -:  323:  }
        -:  324:#pragma GCC visibility pop
        -:  325:}
        -:  326:
        -:  327:# define _GLIBCXX_USE_DUAL_ABI 1
        -:  328:
        -:  329:#if ! _GLIBCXX_USE_DUAL_ABI
        -:  330:// Ignore any pre-defined value of _GLIBCXX_USE_CXX11_ABI
        -:  331:# undef _GLIBCXX_USE_CXX11_ABI
        -:  332:#endif
        -:  333:
        -:  334:#ifndef _GLIBCXX_USE_CXX11_ABI
        -:  335:# define _GLIBCXX_USE_CXX11_ABI 1
        -:  336:#endif
        -:  337:
        -:  338:#if _GLIBCXX_USE_CXX11_ABI
        -:  339:namespace std
        -:  340:{
        -:  341:  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
        -:  342:}
        -:  343:namespace __gnu_cxx
        -:  344:{
        -:  345:  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
        -:  346:}
        -:  347:# define _GLIBCXX_NAMESPACE_CXX11 __cxx11::
        -:  348:# define _GLIBCXX_BEGIN_NAMESPACE_CXX11 namespace __cxx11 {
        -:  349:# define _GLIBCXX_END_NAMESPACE_CXX11 }
        -:  350:# define _GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_ABI_TAG_CXX11
        -:  351:#else
        -:  352:# define _GLIBCXX_NAMESPACE_CXX11
        -:  353:# define _GLIBCXX_BEGIN_NAMESPACE_CXX11
        -:  354:# define _GLIBCXX_END_NAMESPACE_CXX11
        -:  355:# define _GLIBCXX_DEFAULT_ABI_TAG
        -:  356:#endif
        -:  357:
        -:  358:// Non-zero if inline namespaces are used for versioning the entire library.
        -:  359:# define _GLIBCXX_INLINE_VERSION 0 
        -:  360:
        -:  361:#if _GLIBCXX_INLINE_VERSION
        -:  362:// Inline namespace for symbol versioning of (nearly) everything in std.
        -:  363:# define _GLIBCXX_BEGIN_NAMESPACE_VERSION namespace __8 {
        -:  364:# define _GLIBCXX_END_NAMESPACE_VERSION }
        -:  365:// Unused when everything in std is versioned anyway.
        -:  366:# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(X)
        -:  367:# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(X)
        -:  368:
        -:  369:namespace std
        -:  370:{
        -:  371:inline _GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  372:#if __cplusplus >= 201402L
        -:  373:  inline namespace literals {
        -:  374:    inline namespace chrono_literals { }
        -:  375:    inline namespace complex_literals { }
        -:  376:    inline namespace string_literals { }
        -:  377:#if __cplusplus > 201402L
        -:  378:    inline namespace string_view_literals { }
        -:  379:#endif // C++17
        -:  380:  }
        -:  381:#endif // C++14
        -:  382:_GLIBCXX_END_NAMESPACE_VERSION
        -:  383:}
        -:  384:
        -:  385:namespace __gnu_cxx
        -:  386:{
        -:  387:inline _GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  388:_GLIBCXX_END_NAMESPACE_VERSION
        -:  389:}
        -:  390:
        -:  391:#else
        -:  392:// Unused.
        -:  393:# define _GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  394:# define _GLIBCXX_END_NAMESPACE_VERSION
        -:  395:// Used to version individual components, e.g. std::_V2::error_category.
        -:  396:# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(X) inline namespace X {
        -:  397:# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(X)   } // inline namespace X
        -:  398:#endif
        -:  399:
        -:  400:// In the case that we don't have a hosted environment, we can't provide the
        -:  401:// debugging mode.  Instead, we do our best and downgrade to assertions.
        -:  402:#if defined(_GLIBCXX_DEBUG) && !__STDC_HOSTED__
        -:  403:#undef _GLIBCXX_DEBUG
        -:  404:#define _GLIBCXX_ASSERTIONS 1
        -:  405:#endif
        -:  406:
        -:  407:// Inline namespaces for special modes: debug, parallel.
        -:  408:#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PARALLEL)
        -:  409:namespace std
        -:  410:{
        -:  411:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  412:
        -:  413:  // Non-inline namespace for components replaced by alternates in active mode.
        -:  414:  namespace __cxx1998
        -:  415:  {
        -:  416:# if _GLIBCXX_USE_CXX11_ABI
        -:  417:  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
        -:  418:# endif
        -:  419:  }
        -:  420:
        -:  421:_GLIBCXX_END_NAMESPACE_VERSION
        -:  422:
        -:  423:  // Inline namespace for debug mode.
        -:  424:# ifdef _GLIBCXX_DEBUG
        -:  425:  inline namespace __debug { }
        -:  426:# endif
        -:  427:
        -:  428:  // Inline namespaces for parallel mode.
        -:  429:# ifdef _GLIBCXX_PARALLEL
        -:  430:  inline namespace __parallel { }
        -:  431:# endif
        -:  432:}
        -:  433:
        -:  434:// Check for invalid usage and unsupported mixed-mode use.
        -:  435:# if defined(_GLIBCXX_DEBUG) && defined(_GLIBCXX_PARALLEL)
        -:  436:#  error illegal use of multiple inlined namespaces
        -:  437:# endif
        -:  438:
        -:  439:// Check for invalid use due to lack for weak symbols.
        -:  440:# if __NO_INLINE__ && !__GXX_WEAK__
        -:  441:#  warning currently using inlined namespace mode which may fail \
        -:  442:   without inlining due to lack of weak symbols
        -:  443:# endif
        -:  444:#endif
        -:  445:
        -:  446:// Macros for namespace scope. Either namespace std:: or the name
        -:  447:// of some nested namespace within it corresponding to the active mode.
        -:  448:// _GLIBCXX_STD_A
        -:  449:// _GLIBCXX_STD_C
        -:  450://
        -:  451:// Macros for opening/closing conditional namespaces.
        -:  452:// _GLIBCXX_BEGIN_NAMESPACE_ALGO
        -:  453:// _GLIBCXX_END_NAMESPACE_ALGO
        -:  454:// _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
        -:  455:// _GLIBCXX_END_NAMESPACE_CONTAINER
        -:  456:#if defined(_GLIBCXX_DEBUG)
        -:  457:# define _GLIBCXX_STD_C __cxx1998
        -:  458:# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER \
        -:  459:	 namespace _GLIBCXX_STD_C {
        -:  460:# define _GLIBCXX_END_NAMESPACE_CONTAINER }
        -:  461:#else
        -:  462:# define _GLIBCXX_STD_C std
        -:  463:# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
        -:  464:# define _GLIBCXX_END_NAMESPACE_CONTAINER
        -:  465:#endif
        -:  466:
        -:  467:#ifdef _GLIBCXX_PARALLEL
        -:  468:# define _GLIBCXX_STD_A __cxx1998
        -:  469:# define _GLIBCXX_BEGIN_NAMESPACE_ALGO \
        -:  470:	 namespace _GLIBCXX_STD_A {
        -:  471:# define _GLIBCXX_END_NAMESPACE_ALGO }
        -:  472:#else
        -:  473:# define _GLIBCXX_STD_A std
        -:  474:# define _GLIBCXX_BEGIN_NAMESPACE_ALGO
        -:  475:# define _GLIBCXX_END_NAMESPACE_ALGO
        -:  476:#endif
        -:  477:
        -:  478:// GLIBCXX_ABI Deprecated
        -:  479:// Define if compatibility should be provided for -mlong-double-64.
        -:  480:#undef _GLIBCXX_LONG_DOUBLE_COMPAT
        -:  481:
        -:  482:// Define if compatibility should be provided for alternative 128-bit long
        -:  483:// double formats. Not possible for Clang until __ibm128 is supported.
        -:  484:#ifndef __clang__
        -:  485:#undef _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT
        -:  486:#endif
        -:  487:
        -:  488:// Inline namespaces for long double 128 modes.
        -:  489:#if defined _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT \
        -:  490:  && defined __LONG_DOUBLE_IEEE128__
        -:  491:namespace std
        -:  492:{
        -:  493:  // Namespaces for 128-bit IEEE long double format on 64-bit POWER LE.
        -:  494:  inline namespace __gnu_cxx_ieee128 { }
        -:  495:  inline namespace __gnu_cxx11_ieee128 { }
        -:  496:}
        -:  497:# define _GLIBCXX_NAMESPACE_LDBL __gnu_cxx_ieee128::
        -:  498:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL namespace __gnu_cxx_ieee128 {
        -:  499:# define _GLIBCXX_END_NAMESPACE_LDBL }
        -:  500:# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 __gnu_cxx11_ieee128::
        -:  501:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 namespace __gnu_cxx11_ieee128 {
        -:  502:# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 }
        -:  503:
        -:  504:#else // _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT && IEEE128
        -:  505:
        -:  506:#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__
        -:  507:namespace std
        -:  508:{
        -:  509:  inline namespace __gnu_cxx_ldbl128 { }
        -:  510:}
        -:  511:# define _GLIBCXX_NAMESPACE_LDBL __gnu_cxx_ldbl128::
        -:  512:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL namespace __gnu_cxx_ldbl128 {
        -:  513:# define _GLIBCXX_END_NAMESPACE_LDBL }
        -:  514:#else
        -:  515:# define _GLIBCXX_NAMESPACE_LDBL
        -:  516:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL
        -:  517:# define _GLIBCXX_END_NAMESPACE_LDBL
        -:  518:#endif
        -:  519:
        -:  520:#if _GLIBCXX_USE_CXX11_ABI
        -:  521:# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_NAMESPACE_CXX11
        -:  522:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_BEGIN_NAMESPACE_CXX11
        -:  523:# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_END_NAMESPACE_CXX11
        -:  524:#else
        -:  525:# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_NAMESPACE_LDBL
        -:  526:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_BEGIN_NAMESPACE_LDBL
        -:  527:# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_END_NAMESPACE_LDBL
        -:  528:#endif
        -:  529:
        -:  530:#endif // _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT && IEEE128
        -:  531:
        -:  532:namespace std
        -:  533:{
        -:  534:#pragma GCC visibility push(default)
        -:  535:  // Internal version of std::is_constant_evaluated().
        -:  536:  // This can be used without checking if the compiler supports the feature.
        -:  537:  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
        -:  538:  // the compiler support is present to make this function work as expected.
        -:  539:  _GLIBCXX_CONSTEXPR inline bool
function _ZSt23__is_constant_evaluatedv called 23 returned 100% blocks executed 100%
       23:  540:  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
        -:  541:  {
        -:  542:#if __cpp_if_consteval >= 202106L
        -:  543:# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
        -:  544:    if consteval { return true; } else { return false; }
        -:  545:#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
        -:  546:# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
       23:  547:    return __builtin_is_constant_evaluated();
       23:  547-block  0
        -:  548:#else
        -:  549:    return false;
        -:  550:#endif
        -:  551:  }
        -:  552:#pragma GCC visibility pop
        -:  553:}
        -:  554:
        -:  555:// Debug Mode implies checking assertions.
        -:  556:#if defined(_GLIBCXX_DEBUG) && !defined(_GLIBCXX_ASSERTIONS)
        -:  557:# define _GLIBCXX_ASSERTIONS 1
        -:  558:#endif
        -:  559:
        -:  560:// Disable std::string explicit instantiation declarations in order to assert.
        -:  561:#ifdef _GLIBCXX_ASSERTIONS
        -:  562:# undef _GLIBCXX_EXTERN_TEMPLATE
        -:  563:# define _GLIBCXX_EXTERN_TEMPLATE -1
        -:  564:#endif
        -:  565:
        -:  566:
        -:  567:#if _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED
        -:  568:# define __glibcxx_constexpr_assert(cond) \
        -:  569:  if (std::__is_constant_evaluated() && !bool(cond))	\
        -:  570:    __builtin_unreachable() /* precondition violation detected! */
        -:  571:#else
        -:  572:# define __glibcxx_constexpr_assert(unevaluated)
        -:  573:#endif
        -:  574:
        -:  575:#define _GLIBCXX_VERBOSE_ASSERT 1
        -:  576:
        -:  577:// Assert.
        -:  578:#if defined(_GLIBCXX_ASSERTIONS) \
        -:  579:  || defined(_GLIBCXX_PARALLEL) || defined(_GLIBCXX_PARALLEL_ASSERTIONS)
        -:  580:# ifdef _GLIBCXX_VERBOSE_ASSERT
        -:  581:namespace std
        -:  582:{
        -:  583:#pragma GCC visibility push(default)
        -:  584:  // Avoid the use of assert, because we're trying to keep the <cassert>
        -:  585:  // include out of the mix.
        -:  586:  extern "C++" _GLIBCXX_NORETURN
        -:  587:  void
        -:  588:  __glibcxx_assert_fail(const char* __file, int __line,
        -:  589:			const char* __function, const char* __condition)
        -:  590:  _GLIBCXX_NOEXCEPT;
        -:  591:#pragma GCC visibility pop
        -:  592:}
        -:  593:#define __glibcxx_assert_impl(_Condition)				\
        -:  594:  if (__builtin_expect(!bool(_Condition), false))			\
        -:  595:  {									\
        -:  596:    __glibcxx_constexpr_assert(false);					\
        -:  597:    std::__glibcxx_assert_fail(__FILE__, __LINE__, __PRETTY_FUNCTION__,	\
        -:  598:			       #_Condition);				\
        -:  599:  }
        -:  600:# else // ! VERBOSE_ASSERT
        -:  601:# define __glibcxx_assert_impl(_Condition)		\
        -:  602:  if (__builtin_expect(!bool(_Condition), false))	\
        -:  603:  {							\
        -:  604:    __glibcxx_constexpr_assert(false);			\
        -:  605:    __builtin_abort();					\
        -:  606:  }
        -:  607:# endif
        -:  608:#endif
        -:  609:
        -:  610:#if defined(_GLIBCXX_ASSERTIONS)
        -:  611:# define __glibcxx_assert(cond) \
        -:  612:  do { __glibcxx_assert_impl(cond); } while (false)
        -:  613:#else
        -:  614:# define __glibcxx_assert(cond) \
        -:  615:  do { __glibcxx_constexpr_assert(cond); } while (false)
        -:  616:#endif
        -:  617:
        -:  618:// Macro indicating that TSAN is in use.
        -:  619:#if __SANITIZE_THREAD__
        -:  620:#  define _GLIBCXX_TSAN 1
        -:  621:#elif defined __has_feature
        -:  622:# if __has_feature(thread_sanitizer)
        -:  623:#  define _GLIBCXX_TSAN 1
        -:  624:# endif
        -:  625:#endif
        -:  626:
        -:  627:// Macros for race detectors.
        -:  628:// _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A) and
        -:  629:// _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A) should be used to explain
        -:  630:// atomic (lock-free) synchronization to race detectors:
        -:  631:// the race detector will infer a happens-before arc from the former to the
        -:  632:// latter when they share the same argument pointer.
        -:  633://
        -:  634:// The most frequent use case for these macros (and the only case in the
        -:  635:// current implementation of the library) is atomic reference counting:
        -:  636://   void _M_remove_reference()
        -:  637://   {
        -:  638://     _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
        -:  639://     if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount, -1) <= 0)
        -:  640://       {
        -:  641://         _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
        -:  642://         _M_destroy(__a);
        -:  643://       }
        -:  644://   }
        -:  645:// The annotations in this example tell the race detector that all memory
        -:  646:// accesses occurred when the refcount was positive do not race with
        -:  647:// memory accesses which occurred after the refcount became zero.
        -:  648:#ifndef _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE
        -:  649:# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A)
        -:  650:#endif
        -:  651:#ifndef _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER
        -:  652:# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A)
        -:  653:#endif
        -:  654:
        -:  655:// Macros for C linkage: define extern "C" linkage only when using C++.
        -:  656:# define _GLIBCXX_BEGIN_EXTERN_C extern "C" {
        -:  657:# define _GLIBCXX_END_EXTERN_C }
        -:  658:
        -:  659:# define _GLIBCXX_USE_ALLOCATOR_NEW 1
        -:  660:
        -:  661:#ifdef __SIZEOF_INT128__
        -:  662:#if ! defined __GLIBCXX_TYPE_INT_N_0 && ! defined __STRICT_ANSI__
        -:  663:// If __int128 is supported, we expect __GLIBCXX_TYPE_INT_N_0 to be defined
        -:  664:// unless the compiler is in strict mode. If it's not defined and the strict
        -:  665:// macro is not defined, something is wrong.
        -:  666:#warning "__STRICT_ANSI__ seems to have been undefined; this is not supported"
        -:  667:#endif
        -:  668:#endif
        -:  669:
        -:  670:#else // !__cplusplus
        -:  671:# define _GLIBCXX_BEGIN_EXTERN_C
        -:  672:# define _GLIBCXX_END_EXTERN_C
        -:  673:#endif
        -:  674:
        -:  675:
        -:  676:// First includes.
        -:  677:
        -:  678:// Pick up any OS-specific definitions.
        -:  679:#include <bits/os_defines.h>
        -:  680:
        -:  681:// Pick up any CPU-specific definitions.
        -:  682:#include <bits/cpu_defines.h>
        -:  683:
        -:  684:// If platform uses neither visibility nor psuedo-visibility,
        -:  685:// specify empty default for namespace annotation macros.
        -:  686:#ifndef _GLIBCXX_PSEUDO_VISIBILITY
        -:  687:# define _GLIBCXX_PSEUDO_VISIBILITY(V)
        -:  688:#endif
        -:  689:
        -:  690:// Certain function definitions that are meant to be overridable from
        -:  691:// user code are decorated with this macro.  For some targets, this
        -:  692:// macro causes these definitions to be weak.
        -:  693:#ifndef _GLIBCXX_WEAK_DEFINITION
        -:  694:# define _GLIBCXX_WEAK_DEFINITION
        -:  695:#endif
        -:  696:
        -:  697:// By default, we assume that __GXX_WEAK__ also means that there is support
        -:  698:// for declaring functions as weak while not defining such functions.  This
        -:  699:// allows for referring to functions provided by other libraries (e.g.,
        -:  700:// libitm) without depending on them if the respective features are not used.
        -:  701:#ifndef _GLIBCXX_USE_WEAK_REF
        -:  702:# define _GLIBCXX_USE_WEAK_REF __GXX_WEAK__
        -:  703:#endif
        -:  704:
        -:  705:// Conditionally enable annotations for the Transactional Memory TS on C++11.
        -:  706:// Most of the following conditions are due to limitations in the current
        -:  707:// implementation.
        -:  708:#if __cplusplus >= 201103L && _GLIBCXX_USE_CXX11_ABI			\
        -:  709:  && _GLIBCXX_USE_DUAL_ABI && __cpp_transactional_memory >= 201500L	\
        -:  710:  &&  !_GLIBCXX_FULLY_DYNAMIC_STRING && _GLIBCXX_USE_WEAK_REF		\
        -:  711:  && _GLIBCXX_USE_ALLOCATOR_NEW
        -:  712:#define _GLIBCXX_TXN_SAFE transaction_safe
        -:  713:#define _GLIBCXX_TXN_SAFE_DYN transaction_safe_dynamic
        -:  714:#else
        -:  715:#define _GLIBCXX_TXN_SAFE
        -:  716:#define _GLIBCXX_TXN_SAFE_DYN
        -:  717:#endif
        -:  718:
        -:  719:#if __cplusplus > 201402L
        -:  720:// In C++17 mathematical special functions are in namespace std.
        -:  721:# define _GLIBCXX_USE_STD_SPEC_FUNCS 1
        -:  722:#elif __cplusplus >= 201103L && __STDCPP_WANT_MATH_SPEC_FUNCS__ != 0
        -:  723:// For C++11 and C++14 they are in namespace std when requested.
        -:  724:# define _GLIBCXX_USE_STD_SPEC_FUNCS 1
        -:  725:#endif
        -:  726:
        -:  727:// The remainder of the prewritten config is automatic; all the
        -:  728:// user hooks are listed above.
        -:  729:
        -:  730:// Create a boolean flag to be used to determine if --fast-math is set.
        -:  731:#ifdef __FAST_MATH__
        -:  732:# define _GLIBCXX_FAST_MATH 1
        -:  733:#else
        -:  734:# define _GLIBCXX_FAST_MATH 0
        -:  735:#endif
        -:  736:
        -:  737:// This marks string literals in header files to be extracted for eventual
        -:  738:// translation.  It is primarily used for messages in thrown exceptions; see
        -:  739:// src/functexcept.cc.  We use __N because the more traditional _N is used
        -:  740:// for something else under certain OSes (see BADNAMES).
        -:  741:#define __N(msgid)     (msgid)
        -:  742:
        -:  743:// For example, <windows.h> is known to #define min and max as macros...
        -:  744:#undef min
        -:  745:#undef max
        -:  746:
        -:  747:// N.B. these _GLIBCXX_USE_C99_XXX macros are defined unconditionally
        -:  748:// so they should be tested with #if not with #ifdef.
        -:  749:#if __cplusplus >= 201103L
        -:  750:# ifndef _GLIBCXX_USE_C99_MATH
        -:  751:#  define _GLIBCXX_USE_C99_MATH _GLIBCXX11_USE_C99_MATH
        -:  752:# endif
        -:  753:# ifndef _GLIBCXX_USE_C99_COMPLEX
        -:  754:# define _GLIBCXX_USE_C99_COMPLEX _GLIBCXX11_USE_C99_COMPLEX
        -:  755:# endif
        -:  756:# ifndef _GLIBCXX_USE_C99_STDIO
        -:  757:# define _GLIBCXX_USE_C99_STDIO _GLIBCXX11_USE_C99_STDIO
        -:  758:# endif
        -:  759:# ifndef _GLIBCXX_USE_C99_STDLIB
        -:  760:# define _GLIBCXX_USE_C99_STDLIB _GLIBCXX11_USE_C99_STDLIB
        -:  761:# endif
        -:  762:# ifndef _GLIBCXX_USE_C99_WCHAR
        -:  763:# define _GLIBCXX_USE_C99_WCHAR _GLIBCXX11_USE_C99_WCHAR
        -:  764:# endif
        -:  765:#else
        -:  766:# ifndef _GLIBCXX_USE_C99_MATH
        -:  767:#  define _GLIBCXX_USE_C99_MATH _GLIBCXX98_USE_C99_MATH
        -:  768:# endif
        -:  769:# ifndef _GLIBCXX_USE_C99_COMPLEX
        -:  770:# define _GLIBCXX_USE_C99_COMPLEX _GLIBCXX98_USE_C99_COMPLEX
        -:  771:# endif
        -:  772:# ifndef _GLIBCXX_USE_C99_STDIO
        -:  773:# define _GLIBCXX_USE_C99_STDIO _GLIBCXX98_USE_C99_STDIO
        -:  774:# endif
        -:  775:# ifndef _GLIBCXX_USE_C99_STDLIB
        -:  776:# define _GLIBCXX_USE_C99_STDLIB _GLIBCXX98_USE_C99_STDLIB
        -:  777:# endif
        -:  778:# ifndef _GLIBCXX_USE_C99_WCHAR
        -:  779:# define _GLIBCXX_USE_C99_WCHAR _GLIBCXX98_USE_C99_WCHAR
        -:  780:# endif
        -:  781:#endif
        -:  782:
        -:  783:// Unless explicitly specified, enable char8_t extensions only if the core
        -:  784:// language char8_t feature macro is defined.
        -:  785:#ifndef _GLIBCXX_USE_CHAR8_T
        -:  786:# ifdef __cpp_char8_t
        -:  787:#  define _GLIBCXX_USE_CHAR8_T 1
        -:  788:# endif
        -:  789:#endif
        -:  790:#ifdef _GLIBCXX_USE_CHAR8_T
        -:  791:# define __cpp_lib_char8_t 201907L
        -:  792:#endif
        -:  793:
        -:  794:/* Define if __float128 is supported on this host.  */
        -:  795:#if defined(__FLOAT128__) || defined(__SIZEOF_FLOAT128__)
        -:  796:/* For powerpc64 don't use __float128 when it's the same type as long double. */
        -:  797:# if !(defined(_GLIBCXX_LONG_DOUBLE_ALT128_COMPAT) && defined(__LONG_DOUBLE_IEEE128__))
        -:  798:#  define _GLIBCXX_USE_FLOAT128 1
        -:  799:# endif
        -:  800:#endif
        -:  801:
        -:  802:// Define if float has the IEEE binary32 format.
        -:  803:#if __FLT_MANT_DIG__ == 24 \
        -:  804:  && __FLT_MIN_EXP__ == -125 \
        -:  805:  && __FLT_MAX_EXP__ == 128
        -:  806:# define _GLIBCXX_FLOAT_IS_IEEE_BINARY32 1
        -:  807:#endif
        -:  808:
        -:  809:// Define if double has the IEEE binary64 format.
        -:  810:#if __DBL_MANT_DIG__ == 53 \
        -:  811:  && __DBL_MIN_EXP__ == -1021 \
        -:  812:  && __DBL_MAX_EXP__ == 1024
        -:  813:# define _GLIBCXX_DOUBLE_IS_IEEE_BINARY64 1
        -:  814:#endif
        -:  815:
        -:  816:// Define if long double has the IEEE binary128 format.
        -:  817:#if __LDBL_MANT_DIG__ == 113 \
        -:  818:  && __LDBL_MIN_EXP__ == -16381 \
        -:  819:  && __LDBL_MAX_EXP__ == 16384
        -:  820:# define _GLIBCXX_LDOUBLE_IS_IEEE_BINARY128 1
        -:  821:#endif
        -:  822:
        -:  823:#ifdef __STDCPP_BFLOAT16_T__
        -:  824:namespace __gnu_cxx
        -:  825:{
        -:  826:  using __bfloat16_t = decltype(0.0bf16);
        -:  827:}
        -:  828:#endif
        -:  829:
        -:  830:#ifdef __has_builtin
        -:  831:# ifdef __is_identifier
        -:  832:// Intel and older Clang require !__is_identifier for some built-ins:
        -:  833:#  define _GLIBCXX_HAS_BUILTIN(B) __has_builtin(B) || ! __is_identifier(B)
        -:  834:# else
        -:  835:#  define _GLIBCXX_HAS_BUILTIN(B) __has_builtin(B)
        -:  836:# endif
        -:  837:#endif
        -:  838:
        -:  839:#if _GLIBCXX_HAS_BUILTIN(__has_unique_object_representations)
        -:  840:# define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1
        -:  841:#endif
        -:  842:
        -:  843:#if _GLIBCXX_HAS_BUILTIN(__is_aggregate)
        -:  844:# define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1
        -:  845:#endif
        -:  846:
        -:  847:#if _GLIBCXX_HAS_BUILTIN(__is_same)
        -:  848:#  define _GLIBCXX_HAVE_BUILTIN_IS_SAME 1
        -:  849:#endif
        -:  850:
        -:  851:#if _GLIBCXX_HAS_BUILTIN(__builtin_launder)
        -:  852:# define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1
        -:  853:#endif
        -:  854:
        -:  855:#undef _GLIBCXX_HAS_BUILTIN
        -:  856:
        -:  857:// Mark code that should be ignored by the compiler, but seen by Doxygen.
        -:  858:#define _GLIBCXX_DOXYGEN_ONLY(X)
        -:  859:
        -:  860:// PSTL configuration
        -:  861:
        -:  862:#if __cplusplus >= 201703L
        -:  863:// This header is not installed for freestanding:
        -:  864:#if __has_include(<pstl/pstl_config.h>)
        -:  865:// Preserved here so we have some idea which version of upstream we've pulled in
        -:  866:// #define PSTL_VERSION 9000
        -:  867:
        -:  868:// For now this defaults to being based on the presence of Thread Building Blocks
        -:  869:# ifndef _GLIBCXX_USE_TBB_PAR_BACKEND
        -:  870:#  define _GLIBCXX_USE_TBB_PAR_BACKEND __has_include(<tbb/tbb.h>)
        -:  871:# endif
        -:  872:// This section will need some rework when a new (default) backend type is added
        -:  873:# if _GLIBCXX_USE_TBB_PAR_BACKEND
        -:  874:#  define _PSTL_PAR_BACKEND_TBB
        -:  875:# else
        -:  876:#  define _PSTL_PAR_BACKEND_SERIAL
        -:  877:# endif
        -:  878:
        -:  879:# define _PSTL_ASSERT(_Condition) __glibcxx_assert(_Condition)
        -:  880:# define _PSTL_ASSERT_MSG(_Condition, _Message) __glibcxx_assert(_Condition)
        -:  881:
        -:  882:#include <pstl/pstl_config.h>
        -:  883:#endif // __has_include
        -:  884:#endif // C++17
        -:  885:
        -:  886:// End of prewritten config; the settings discovered at configure time follow.
        -:  887:/* config.h.  Generated from config.h.in by configure.  */
        -:  888:/* config.h.in.  Generated from configure.ac by autoheader.  */
        -:  889:
        -:  890:/* Define to 1 if you have the `acosf' function. */
        -:  891:#define _GLIBCXX_HAVE_ACOSF 1
        -:  892:
        -:  893:/* Define to 1 if you have the `acosl' function. */
        -:  894:#define _GLIBCXX_HAVE_ACOSL 1
        -:  895:
        -:  896:/* Define to 1 if you have the `aligned_alloc' function. */
        -:  897:/* #undef _GLIBCXX_HAVE_ALIGNED_ALLOC */
        -:  898:
        -:  899:/* Define if arc4random is available in <stdlib.h>. */
        -:  900:/* #undef _GLIBCXX_HAVE_ARC4RANDOM */
        -:  901:
        -:  902:/* Define to 1 if you have the <arpa/inet.h> header file. */
        -:  903:/* #undef _GLIBCXX_HAVE_ARPA_INET_H */
        -:  904:
        -:  905:/* Define to 1 if you have the `asinf' function. */
        -:  906:#define _GLIBCXX_HAVE_ASINF 1
        -:  907:
        -:  908:/* Define to 1 if you have the `asinl' function. */
        -:  909:#define _GLIBCXX_HAVE_ASINL 1
        -:  910:
        -:  911:/* Define to 1 if the target assembler supports .symver directive. */
        -:  912:/* #undef _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE */
        -:  913:
        -:  914:/* Define to 1 if you have the `atan2f' function. */
        -:  915:#define _GLIBCXX_HAVE_ATAN2F 1
        -:  916:
        -:  917:/* Define to 1 if you have the `atan2l' function. */
        -:  918:#define _GLIBCXX_HAVE_ATAN2L 1
        -:  919:
        -:  920:/* Define to 1 if you have the `atanf' function. */
        -:  921:#define _GLIBCXX_HAVE_ATANF 1
        -:  922:
        -:  923:/* Define to 1 if you have the `atanl' function. */
        -:  924:#define _GLIBCXX_HAVE_ATANL 1
        -:  925:
        -:  926:/* Defined if shared_ptr reference counting should use atomic operations. */
        -:  927:#define _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY 1
        -:  928:
        -:  929:/* Define to 1 if you have the `at_quick_exit' function. */
        -:  930:/* #undef _GLIBCXX_HAVE_AT_QUICK_EXIT */
        -:  931:
        -:  932:/* Define to 1 if the target assembler supports thread-local storage. */
        -:  933:/* #undef _GLIBCXX_HAVE_CC_TLS */
        -:  934:
        -:  935:/* Define to 1 if you have the `ceilf' function. */
        -:  936:#define _GLIBCXX_HAVE_CEILF 1
        -:  937:
        -:  938:/* Define to 1 if you have the `ceill' function. */
        -:  939:#define _GLIBCXX_HAVE_CEILL 1
        -:  940:
        -:  941:/* Define to 1 if you have the <complex.h> header file. */
        -:  942:#define _GLIBCXX_HAVE_COMPLEX_H 1
        -:  943:
        -:  944:/* Define to 1 if you have the `cosf' function. */
        -:  945:#define _GLIBCXX_HAVE_COSF 1
        -:  946:
        -:  947:/* Define to 1 if you have the `coshf' function. */
        -:  948:#define _GLIBCXX_HAVE_COSHF 1
        -:  949:
        -:  950:/* Define to 1 if you have the `coshl' function. */
        -:  951:#define _GLIBCXX_HAVE_COSHL 1
        -:  952:
        -:  953:/* Define to 1 if you have the `cosl' function. */
        -:  954:#define _GLIBCXX_HAVE_COSL 1
        -:  955:
        -:  956:/* Define to 1 if you have the declaration of `strnlen', and to 0 if you
        -:  957:   don't. */
        -:  958:#define _GLIBCXX_HAVE_DECL_STRNLEN 1
        -:  959:
        -:  960:/* Define to 1 if you have the <dirent.h> header file. */
        -:  961:#define _GLIBCXX_HAVE_DIRENT_H 1
        -:  962:
        -:  963:/* Define if dirfd is available in <dirent.h>. */
        -:  964:/* #undef _GLIBCXX_HAVE_DIRFD */
        -:  965:
        -:  966:/* Define to 1 if you have the <dlfcn.h> header file. */
        -:  967:/* #undef _GLIBCXX_HAVE_DLFCN_H */
        -:  968:
        -:  969:/* Define to 1 if you have the <endian.h> header file. */
        -:  970:/* #undef _GLIBCXX_HAVE_ENDIAN_H */
        -:  971:
        -:  972:/* Define to 1 if GCC 4.6 supported std::exception_ptr for the target */
        -:  973:/* #undef _GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46 */
        -:  974:
        -:  975:/* Define to 1 if you have the <execinfo.h> header file. */
        -:  976:/* #undef _GLIBCXX_HAVE_EXECINFO_H */
        -:  977:
        -:  978:/* Define to 1 if you have the `expf' function. */
        -:  979:#define _GLIBCXX_HAVE_EXPF 1
        -:  980:
        -:  981:/* Define to 1 if you have the `expl' function. */
        -:  982:#define _GLIBCXX_HAVE_EXPL 1
        -:  983:
        -:  984:/* Define to 1 if you have the `fabsf' function. */
        -:  985:#define _GLIBCXX_HAVE_FABSF 1
        -:  986:
        -:  987:/* Define to 1 if you have the `fabsl' function. */
        -:  988:#define _GLIBCXX_HAVE_FABSL 1
        -:  989:
        -:  990:/* Define to 1 if you have the <fcntl.h> header file. */
        -:  991:#define _GLIBCXX_HAVE_FCNTL_H 1
        -:  992:
        -:  993:/* Define if fdopendir is available in <dirent.h>. */
        -:  994:/* #undef _GLIBCXX_HAVE_FDOPENDIR */
        -:  995:
        -:  996:/* Define to 1 if you have the <fenv.h> header file. */
        -:  997:#define _GLIBCXX_HAVE_FENV_H 1
        -:  998:
        -:  999:/* Define to 1 if you have the `finite' function. */
        -: 1000:#define _GLIBCXX_HAVE_FINITE 1
        -: 1001:
        -: 1002:/* Define to 1 if you have the `finitef' function. */
        -: 1003:/* #undef _GLIBCXX_HAVE_FINITEF */
        -: 1004:
        -: 1005:/* Define to 1 if you have the `finitel' function. */
        -: 1006:/* #undef _GLIBCXX_HAVE_FINITEL */
        -: 1007:
        -: 1008:/* Define to 1 if you have the <float.h> header file. */
        -: 1009:#define _GLIBCXX_HAVE_FLOAT_H 1
        -: 1010:
        -: 1011:/* Define to 1 if you have the `floorf' function. */
        -: 1012:#define _GLIBCXX_HAVE_FLOORF 1
        -: 1013:
        -: 1014:/* Define to 1 if you have the `floorl' function. */
        -: 1015:#define _GLIBCXX_HAVE_FLOORL 1
        -: 1016:
        -: 1017:/* Define to 1 if you have the `fmodf' function. */
        -: 1018:#define _GLIBCXX_HAVE_FMODF 1
        -: 1019:
        -: 1020:/* Define to 1 if you have the `fmodl' function. */
        -: 1021:#define _GLIBCXX_HAVE_FMODL 1
        -: 1022:
        -: 1023:/* Define to 1 if you have the `fpclass' function. */
        -: 1024:#define _GLIBCXX_HAVE_FPCLASS 1
        -: 1025:
        -: 1026:/* Define to 1 if you have the <fp.h> header file. */
        -: 1027:/* #undef _GLIBCXX_HAVE_FP_H */
        -: 1028:
        -: 1029:/* Define to 1 if you have the `frexpf' function. */
        -: 1030:#define _GLIBCXX_HAVE_FREXPF 1
        -: 1031:
        -: 1032:/* Define to 1 if you have the `frexpl' function. */
        -: 1033:#define _GLIBCXX_HAVE_FREXPL 1
        -: 1034:
        -: 1035:/* Define if getentropy is available in <unistd.h>. */
        -: 1036:/* #undef _GLIBCXX_HAVE_GETENTROPY */
        -: 1037:
        -: 1038:/* Define if _Unwind_GetIPInfo is available. */
        -: 1039:#define _GLIBCXX_HAVE_GETIPINFO 1
        -: 1040:
        -: 1041:/* Define if gets is available in <stdio.h> before C++14. */
        -: 1042:#define _GLIBCXX_HAVE_GETS 1
        -: 1043:
        -: 1044:/* Define to 1 if you have the `hypot' function. */
        -: 1045:#define _GLIBCXX_HAVE_HYPOT 1
        -: 1046:
        -: 1047:/* Define to 1 if you have the `hypotf' function. */
        -: 1048:#define _GLIBCXX_HAVE_HYPOTF 1
        -: 1049:
        -: 1050:/* Define to 1 if you have the `hypotl' function. */
        -: 1051:#define _GLIBCXX_HAVE_HYPOTL 1
        -: 1052:
        -: 1053:/* Define if you have the iconv() function. */
        -: 1054:/* #undef _GLIBCXX_HAVE_ICONV */
        -: 1055:
        -: 1056:/* Define to 1 if you have the <ieeefp.h> header file. */
        -: 1057:#define _GLIBCXX_HAVE_IEEEFP_H 1
        -: 1058:
        -: 1059:/* Define to 1 if you have the <inttypes.h> header file. */
        -: 1060:#define _GLIBCXX_HAVE_INTTYPES_H 1
        -: 1061:
        -: 1062:/* Define to 1 if you have the `isinf' function. */
        -: 1063:/* #undef _GLIBCXX_HAVE_ISINF */
        -: 1064:
        -: 1065:/* Define to 1 if you have the `isinff' function. */
        -: 1066:/* #undef _GLIBCXX_HAVE_ISINFF */
        -: 1067:
        -: 1068:/* Define to 1 if you have the `isinfl' function. */
        -: 1069:/* #undef _GLIBCXX_HAVE_ISINFL */
        -: 1070:
        -: 1071:/* Define to 1 if you have the `isnan' function. */
        -: 1072:#define _GLIBCXX_HAVE_ISNAN 1
        -: 1073:
        -: 1074:/* Define to 1 if you have the `isnanf' function. */
        -: 1075:/* #undef _GLIBCXX_HAVE_ISNANF */
        -: 1076:
        -: 1077:/* Define to 1 if you have the `isnanl' function. */
        -: 1078:/* #undef _GLIBCXX_HAVE_ISNANL */
        -: 1079:
        -: 1080:/* Defined if iswblank exists. */
        -: 1081:#define _GLIBCXX_HAVE_ISWBLANK 1
        -: 1082:
        -: 1083:/* Define if LC_MESSAGES is available in <locale.h>. */
        -: 1084:/* #undef _GLIBCXX_HAVE_LC_MESSAGES */
        -: 1085:
        -: 1086:/* Define to 1 if you have the `ldexpf' function. */
        -: 1087:#define _GLIBCXX_HAVE_LDEXPF 1
        -: 1088:
        -: 1089:/* Define to 1 if you have the `ldexpl' function. */
        -: 1090:#define _GLIBCXX_HAVE_LDEXPL 1
        -: 1091:
        -: 1092:/* Define to 1 if you have the <libintl.h> header file. */
        -: 1093:/* #undef _GLIBCXX_HAVE_LIBINTL_H */
        -: 1094:
        -: 1095:/* Only used in build directory testsuite_hooks.h. */
        -: 1096:/* #undef _GLIBCXX_HAVE_LIMIT_AS */
        -: 1097:
        -: 1098:/* Only used in build directory testsuite_hooks.h. */
        -: 1099:/* #undef _GLIBCXX_HAVE_LIMIT_DATA */
        -: 1100:
        -: 1101:/* Only used in build directory testsuite_hooks.h. */
        -: 1102:/* #undef _GLIBCXX_HAVE_LIMIT_FSIZE */
        -: 1103:
        -: 1104:/* Only used in build directory testsuite_hooks.h. */
        -: 1105:/* #undef _GLIBCXX_HAVE_LIMIT_RSS */
        -: 1106:
        -: 1107:/* Only used in build directory testsuite_hooks.h. */
        -: 1108:/* #undef _GLIBCXX_HAVE_LIMIT_VMEM */
        -: 1109:
        -: 1110:/* Define if link is available in <unistd.h>. */
        -: 1111:/* #undef _GLIBCXX_HAVE_LINK */
        -: 1112:
        -: 1113:/* Define to 1 if you have the <link.h> header file. */
        -: 1114:/* #undef _GLIBCXX_HAVE_LINK_H */
        -: 1115:
        -: 1116:/* Define if futex syscall is available. */
        -: 1117:/* #undef _GLIBCXX_HAVE_LINUX_FUTEX */
        -: 1118:
        -: 1119:/* Define to 1 if you have the <linux/random.h> header file. */
        -: 1120:/* #undef _GLIBCXX_HAVE_LINUX_RANDOM_H */
        -: 1121:
        -: 1122:/* Define to 1 if you have the <linux/types.h> header file. */
        -: 1123:/* #undef _GLIBCXX_HAVE_LINUX_TYPES_H */
        -: 1124:
        -: 1125:/* Define to 1 if you have the <locale.h> header file. */
        -: 1126:#define _GLIBCXX_HAVE_LOCALE_H 1
        -: 1127:
        -: 1128:/* Define to 1 if you have the `log10f' function. */
        -: 1129:#define _GLIBCXX_HAVE_LOG10F 1
        -: 1130:
        -: 1131:/* Define to 1 if you have the `log10l' function. */
        -: 1132:#define _GLIBCXX_HAVE_LOG10L 1
        -: 1133:
        -: 1134:/* Define to 1 if you have the `logf' function. */
        -: 1135:#define _GLIBCXX_HAVE_LOGF 1
        -: 1136:
        -: 1137:/* Define to 1 if you have the `logl' function. */
        -: 1138:#define _GLIBCXX_HAVE_LOGL 1
        -: 1139:
        -: 1140:/* Define to 1 if you have the <machine/endian.h> header file. */
        -: 1141:/* #undef _GLIBCXX_HAVE_MACHINE_ENDIAN_H */
        -: 1142:
        -: 1143:/* Define to 1 if you have the <machine/param.h> header file. */
        -: 1144:/* #undef _GLIBCXX_HAVE_MACHINE_PARAM_H */
        -: 1145:
        -: 1146:/* Define if mbstate_t exists in wchar.h. */
        -: 1147:#define _GLIBCXX_HAVE_MBSTATE_T 1
        -: 1148:
        -: 1149:/* Define to 1 if you have the `memalign' function. */
        -: 1150:/* #undef _GLIBCXX_HAVE_MEMALIGN */
        -: 1151:
        -: 1152:/* Define to 1 if you have the <memory.h> header file. */
        -: 1153:#define _GLIBCXX_HAVE_MEMORY_H 1
        -: 1154:
        -: 1155:/* Define to 1 if you have the `modf' function. */
        -: 1156:#define _GLIBCXX_HAVE_MODF 1
        -: 1157:
        -: 1158:/* Define to 1 if you have the `modff' function. */
        -: 1159:#define _GLIBCXX_HAVE_MODFF 1
        -: 1160:
        -: 1161:/* Define to 1 if you have the `modfl' function. */
        -: 1162:#define _GLIBCXX_HAVE_MODFL 1
        -: 1163:
        -: 1164:/* Define to 1 if you have the <nan.h> header file. */
        -: 1165:/* #undef _GLIBCXX_HAVE_NAN_H */
        -: 1166:
        -: 1167:/* Define to 1 if you have the <netdb.h> header file. */
        -: 1168:/* #undef _GLIBCXX_HAVE_NETDB_H */
        -: 1169:
        -: 1170:/* Define to 1 if you have the <netinet/in.h> header file. */
        -: 1171:/* #undef _GLIBCXX_HAVE_NETINET_IN_H */
        -: 1172:
        -: 1173:/* Define to 1 if you have the <netinet/tcp.h> header file. */
        -: 1174:/* #undef _GLIBCXX_HAVE_NETINET_TCP_H */
        -: 1175:
        -: 1176:/* Define if <math.h> defines obsolete isinf function. */
        -: 1177:/* #undef _GLIBCXX_HAVE_OBSOLETE_ISINF */
        -: 1178:
        -: 1179:/* Define if <math.h> defines obsolete isnan function. */
        -: 1180:/* #undef _GLIBCXX_HAVE_OBSOLETE_ISNAN */
        -: 1181:
        -: 1182:/* Define if openat is available in <fcntl.h>. */
        -: 1183:/* #undef _GLIBCXX_HAVE_OPENAT */
        -: 1184:
        -: 1185:/* Define if poll is available in <poll.h>. */
        -: 1186:/* #undef _GLIBCXX_HAVE_POLL */
        -: 1187:
        -: 1188:/* Define to 1 if you have the <poll.h> header file. */
        -: 1189:/* #undef _GLIBCXX_HAVE_POLL_H */
        -: 1190:
        -: 1191:/* Define to 1 if you have the `posix_memalign' function. */
        -: 1192:/* #undef _GLIBCXX_HAVE_POSIX_MEMALIGN */
        -: 1193:
        -: 1194:/* Define to 1 if POSIX Semaphores with sem_timedwait are available in
        -: 1195:   <semaphore.h>. */
        -: 1196:#define _GLIBCXX_HAVE_POSIX_SEMAPHORE 1
        -: 1197:
        -: 1198:/* Define to 1 if you have the `powf' function. */
        -: 1199:#define _GLIBCXX_HAVE_POWF 1
        -: 1200:
        -: 1201:/* Define to 1 if you have the `powl' function. */
        -: 1202:#define _GLIBCXX_HAVE_POWL 1
        -: 1203:
        -: 1204:/* Define to 1 if you have the `qfpclass' function. */
        -: 1205:/* #undef _GLIBCXX_HAVE_QFPCLASS */
        -: 1206:
        -: 1207:/* Define to 1 if you have the `quick_exit' function. */
        -: 1208:/* #undef _GLIBCXX_HAVE_QUICK_EXIT */
        -: 1209:
        -: 1210:/* Define if readlink is available in <unistd.h>. */
        -: 1211:/* #undef _GLIBCXX_HAVE_READLINK */
        -: 1212:
        -: 1213:/* Define to 1 if you have the `secure_getenv' function. */
        -: 1214:/* #undef _GLIBCXX_HAVE_SECURE_GETENV */
        -: 1215:
        -: 1216:/* Define to 1 if you have the `setenv' function. */
        -: 1217:/* #undef _GLIBCXX_HAVE_SETENV */
        -: 1218:
        -: 1219:/* Define to 1 if you have the `sincos' function. */
        -: 1220:#define _GLIBCXX_HAVE_SINCOS 1
        -: 1221:
        -: 1222:/* Define to 1 if you have the `sincosf' function. */
        -: 1223:#define _GLIBCXX_HAVE_SINCOSF 1
        -: 1224:
        -: 1225:/* Define to 1 if you have the `sincosl' function. */
        -: 1226:#define _GLIBCXX_HAVE_SINCOSL 1
        -: 1227:
        -: 1228:/* Define to 1 if you have the `sinf' function. */
        -: 1229:#define _GLIBCXX_HAVE_SINF 1
        -: 1230:
        -: 1231:/* Define to 1 if you have the `sinhf' function. */
        -: 1232:#define _GLIBCXX_HAVE_SINHF 1
        -: 1233:
        -: 1234:/* Define to 1 if you have the `sinhl' function. */
        -: 1235:#define _GLIBCXX_HAVE_SINHL 1
        -: 1236:
        -: 1237:/* Define to 1 if you have the `sinl' function. */
        -: 1238:#define _GLIBCXX_HAVE_SINL 1
        -: 1239:
        -: 1240:/* Defined if sleep exists. */
        -: 1241:/* #undef _GLIBCXX_HAVE_SLEEP */
        -: 1242:
        -: 1243:/* Define to 1 if you have the `sockatmark' function. */
        -: 1244:/* #undef _GLIBCXX_HAVE_SOCKATMARK */
        -: 1245:
        -: 1246:/* Define to 1 if you have the `sqrtf' function. */
        -: 1247:#define _GLIBCXX_HAVE_SQRTF 1
        -: 1248:
        -: 1249:/* Define to 1 if you have the `sqrtl' function. */
        -: 1250:#define _GLIBCXX_HAVE_SQRTL 1
        -: 1251:
        -: 1252:/* Define if the <stacktrace> header is supported. */
        -: 1253:/* #undef _GLIBCXX_HAVE_STACKTRACE */
        -: 1254:
        -: 1255:/* Define to 1 if you have the <stdalign.h> header file. */
        -: 1256:#define _GLIBCXX_HAVE_STDALIGN_H 1
        -: 1257:
        -: 1258:/* Define to 1 if you have the <stdbool.h> header file. */
        -: 1259:#define _GLIBCXX_HAVE_STDBOOL_H 1
        -: 1260:
        -: 1261:/* Define to 1 if you have the <stdint.h> header file. */
        -: 1262:#define _GLIBCXX_HAVE_STDINT_H 1
        -: 1263:
        -: 1264:/* Define to 1 if you have the <stdlib.h> header file. */
        -: 1265:#define _GLIBCXX_HAVE_STDLIB_H 1
        -: 1266:
        -: 1267:/* Define if strerror_l is available in <string.h>. */
        -: 1268:/* #undef _GLIBCXX_HAVE_STRERROR_L */
        -: 1269:
        -: 1270:/* Define if strerror_r is available in <string.h>. */
        -: 1271:/* #undef _GLIBCXX_HAVE_STRERROR_R */
        -: 1272:
        -: 1273:/* Define to 1 if you have the <strings.h> header file. */
        -: 1274:#define _GLIBCXX_HAVE_STRINGS_H 1
        -: 1275:
        -: 1276:/* Define to 1 if you have the <string.h> header file. */
        -: 1277:#define _GLIBCXX_HAVE_STRING_H 1
        -: 1278:
        -: 1279:/* Define to 1 if you have the `strtof' function. */
        -: 1280:#define _GLIBCXX_HAVE_STRTOF 1
        -: 1281:
        -: 1282:/* Define to 1 if you have the `strtold' function. */
        -: 1283:#define _GLIBCXX_HAVE_STRTOLD 1
        -: 1284:
        -: 1285:/* Define to 1 if `d_type' is a member of `struct dirent'. */
        -: 1286:/* #undef _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE */
        -: 1287:
        -: 1288:/* Define if strxfrm_l is available in <string.h>. */
        -: 1289:/* #undef _GLIBCXX_HAVE_STRXFRM_L */
        -: 1290:
        -: 1291:/* Define if symlink is available in <unistd.h>. */
        -: 1292:/* #undef _GLIBCXX_HAVE_SYMLINK */
        -: 1293:
        -: 1294:/* Define to 1 if the target runtime linker supports binding the same symbol
        -: 1295:   to different versions. */
        -: 1296:/* #undef _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT */
        -: 1297:
        -: 1298:/* Define to 1 if you have the <sys/filio.h> header file. */
        -: 1299:/* #undef _GLIBCXX_HAVE_SYS_FILIO_H */
        -: 1300:
        -: 1301:/* Define to 1 if you have the <sys/ioctl.h> header file. */
        -: 1302:/* #undef _GLIBCXX_HAVE_SYS_IOCTL_H */
        -: 1303:
        -: 1304:/* Define to 1 if you have the <sys/ipc.h> header file. */
        -: 1305:/* #undef _GLIBCXX_HAVE_SYS_IPC_H */
        -: 1306:
        -: 1307:/* Define to 1 if you have the <sys/isa_defs.h> header file. */
        -: 1308:/* #undef _GLIBCXX_HAVE_SYS_ISA_DEFS_H */
        -: 1309:
        -: 1310:/* Define to 1 if you have the <sys/machine.h> header file. */
        -: 1311:/* #undef _GLIBCXX_HAVE_SYS_MACHINE_H */
        -: 1312:
        -: 1313:/* Define to 1 if you have the <sys/mman.h> header file. */
        -: 1314:/* #undef _GLIBCXX_HAVE_SYS_MMAN_H */
        -: 1315:
        -: 1316:/* Define to 1 if you have the <sys/param.h> header file. */
        -: 1317:#define _GLIBCXX_HAVE_SYS_PARAM_H 1
        -: 1318:
        -: 1319:/* Define to 1 if you have the <sys/resource.h> header file. */
        -: 1320:/* #undef _GLIBCXX_HAVE_SYS_RESOURCE_H */
        -: 1321:
        -: 1322:/* Define to 1 if you have a suitable <sys/sdt.h> header file */
        -: 1323:/* #undef _GLIBCXX_HAVE_SYS_SDT_H */
        -: 1324:
        -: 1325:/* Define to 1 if you have the <sys/sem.h> header file. */
        -: 1326:/* #undef _GLIBCXX_HAVE_SYS_SEM_H */
        -: 1327:
        -: 1328:/* Define to 1 if you have the <sys/socket.h> header file. */
        -: 1329:/* #undef _GLIBCXX_HAVE_SYS_SOCKET_H */
        -: 1330:
        -: 1331:/* Define to 1 if you have the <sys/statvfs.h> header file. */
        -: 1332:/* #undef _GLIBCXX_HAVE_SYS_STATVFS_H */
        -: 1333:
        -: 1334:/* Define to 1 if you have the <sys/stat.h> header file. */
        -: 1335:#define _GLIBCXX_HAVE_SYS_STAT_H 1
        -: 1336:
        -: 1337:/* Define to 1 if you have the <sys/sysinfo.h> header file. */
        -: 1338:/* #undef _GLIBCXX_HAVE_SYS_SYSINFO_H */
        -: 1339:
        -: 1340:/* Define to 1 if you have the <sys/time.h> header file. */
        -: 1341:#define _GLIBCXX_HAVE_SYS_TIME_H 1
        -: 1342:
        -: 1343:/* Define to 1 if you have the <sys/types.h> header file. */
        -: 1344:#define _GLIBCXX_HAVE_SYS_TYPES_H 1
        -: 1345:
        -: 1346:/* Define to 1 if you have the <sys/uio.h> header file. */
        -: 1347:/* #undef _GLIBCXX_HAVE_SYS_UIO_H */
        -: 1348:
        -: 1349:/* Define if S_IFREG is available in <sys/stat.h>. */
        -: 1350:/* #undef _GLIBCXX_HAVE_S_IFREG */
        -: 1351:
        -: 1352:/* Define if S_ISREG is available in <sys/stat.h>. */
        -: 1353:#define _GLIBCXX_HAVE_S_ISREG 1
        -: 1354:
        -: 1355:/* Define to 1 if you have the `tanf' function. */
        -: 1356:#define _GLIBCXX_HAVE_TANF 1
        -: 1357:
        -: 1358:/* Define to 1 if you have the `tanhf' function. */
        -: 1359:#define _GLIBCXX_HAVE_TANHF 1
        -: 1360:
        -: 1361:/* Define to 1 if you have the `tanhl' function. */
        -: 1362:#define _GLIBCXX_HAVE_TANHL 1
        -: 1363:
        -: 1364:/* Define to 1 if you have the `tanl' function. */
        -: 1365:#define _GLIBCXX_HAVE_TANL 1
        -: 1366:
        -: 1367:/* Define to 1 if you have the <tgmath.h> header file. */
        -: 1368:#define _GLIBCXX_HAVE_TGMATH_H 1
        -: 1369:
        -: 1370:/* Define to 1 if you have the `timespec_get' function. */
        -: 1371:/* #undef _GLIBCXX_HAVE_TIMESPEC_GET */
        -: 1372:
        -: 1373:/* Define to 1 if the target supports thread-local storage. */
        -: 1374:#define _GLIBCXX_HAVE_TLS 1
        -: 1375:
        -: 1376:/* Define if truncate is available in <unistd.h>. */
        -: 1377:#define _GLIBCXX_HAVE_TRUNCATE 1
        -: 1378:
        -: 1379:/* Define to 1 if you have the <uchar.h> header file. */
        -: 1380:#define _GLIBCXX_HAVE_UCHAR_H 1
        -: 1381:
        -: 1382:/* Define to 1 if you have the <unistd.h> header file. */
        -: 1383:#define _GLIBCXX_HAVE_UNISTD_H 1
        -: 1384:
        -: 1385:/* Define if unlinkat is available in <fcntl.h>. */
        -: 1386:/* #undef _GLIBCXX_HAVE_UNLINKAT */
        -: 1387:
        -: 1388:/* Define to 1 if you have the `uselocale' function. */
        -: 1389:/* #undef _GLIBCXX_HAVE_USELOCALE */
        -: 1390:
        -: 1391:/* Defined if usleep exists. */
        -: 1392:/* #undef _GLIBCXX_HAVE_USLEEP */
        -: 1393:
        -: 1394:/* Define to 1 if you have the <utime.h> header file. */
        -: 1395:#define _GLIBCXX_HAVE_UTIME_H 1
        -: 1396:
        -: 1397:/* Defined if vfwscanf exists. */
        -: 1398:#define _GLIBCXX_HAVE_VFWSCANF 1
        -: 1399:
        -: 1400:/* Defined if vswscanf exists. */
        -: 1401:#define _GLIBCXX_HAVE_VSWSCANF 1
        -: 1402:
        -: 1403:/* Defined if vwscanf exists. */
        -: 1404:#define _GLIBCXX_HAVE_VWSCANF 1
        -: 1405:
        -: 1406:/* Define to 1 if you have the <wchar.h> header file. */
        -: 1407:#define _GLIBCXX_HAVE_WCHAR_H 1
        -: 1408:
        -: 1409:/* Defined if wcstof exists. */
        -: 1410:#define _GLIBCXX_HAVE_WCSTOF 1
        -: 1411:
        -: 1412:/* Define to 1 if you have the <wctype.h> header file. */
        -: 1413:#define _GLIBCXX_HAVE_WCTYPE_H 1
        -: 1414:
        -: 1415:/* Define to 1 if you have the <windows.h> header file. */
        -: 1416:#define _GLIBCXX_HAVE_WINDOWS_H 1
        -: 1417:
        -: 1418:/* Define if writev is available in <sys/uio.h>. */
        -: 1419:/* #undef _GLIBCXX_HAVE_WRITEV */
        -: 1420:
        -: 1421:/* Define to 1 if you have the <xlocale.h> header file. */
        -: 1422:/* #undef _GLIBCXX_HAVE_XLOCALE_H */
        -: 1423:
        -: 1424:/* Define to 1 if you have the `_acosf' function. */
        -: 1425:/* #undef _GLIBCXX_HAVE__ACOSF */
        -: 1426:
        -: 1427:/* Define to 1 if you have the `_acosl' function. */
        -: 1428:/* #undef _GLIBCXX_HAVE__ACOSL */
        -: 1429:
        -: 1430:/* Define to 1 if you have the `_aligned_malloc' function. */
        -: 1431:#define _GLIBCXX_HAVE__ALIGNED_MALLOC 1
        -: 1432:
        -: 1433:/* Define to 1 if you have the `_asinf' function. */
        -: 1434:/* #undef _GLIBCXX_HAVE__ASINF */
        -: 1435:
        -: 1436:/* Define to 1 if you have the `_asinl' function. */
        -: 1437:/* #undef _GLIBCXX_HAVE__ASINL */
        -: 1438:
        -: 1439:/* Define to 1 if you have the `_atan2f' function. */
        -: 1440:/* #undef _GLIBCXX_HAVE__ATAN2F */
        -: 1441:
        -: 1442:/* Define to 1 if you have the `_atan2l' function. */
        -: 1443:/* #undef _GLIBCXX_HAVE__ATAN2L */
        -: 1444:
        -: 1445:/* Define to 1 if you have the `_atanf' function. */
        -: 1446:/* #undef _GLIBCXX_HAVE__ATANF */
        -: 1447:
        -: 1448:/* Define to 1 if you have the `_atanl' function. */
        -: 1449:/* #undef _GLIBCXX_HAVE__ATANL */
        -: 1450:
        -: 1451:/* Define to 1 if you have the `_ceilf' function. */
        -: 1452:/* #undef _GLIBCXX_HAVE__CEILF */
        -: 1453:
        -: 1454:/* Define to 1 if you have the `_ceill' function. */
        -: 1455:/* #undef _GLIBCXX_HAVE__CEILL */
        -: 1456:
        -: 1457:/* Define to 1 if you have the `_cosf' function. */
        -: 1458:/* #undef _GLIBCXX_HAVE__COSF */
        -: 1459:
        -: 1460:/* Define to 1 if you have the `_coshf' function. */
        -: 1461:/* #undef _GLIBCXX_HAVE__COSHF */
        -: 1462:
        -: 1463:/* Define to 1 if you have the `_coshl' function. */
        -: 1464:/* #undef _GLIBCXX_HAVE__COSHL */
        -: 1465:
        -: 1466:/* Define to 1 if you have the `_cosl' function. */
        -: 1467:/* #undef _GLIBCXX_HAVE__COSL */
        -: 1468:
        -: 1469:/* Define to 1 if you have the `_expf' function. */
        -: 1470:/* #undef _GLIBCXX_HAVE__EXPF */
        -: 1471:
        -: 1472:/* Define to 1 if you have the `_expl' function. */
        -: 1473:/* #undef _GLIBCXX_HAVE__EXPL */
        -: 1474:
        -: 1475:/* Define to 1 if you have the `_fabsf' function. */
        -: 1476:/* #undef _GLIBCXX_HAVE__FABSF */
        -: 1477:
        -: 1478:/* Define to 1 if you have the `_fabsl' function. */
        -: 1479:/* #undef _GLIBCXX_HAVE__FABSL */
        -: 1480:
        -: 1481:/* Define to 1 if you have the `_finite' function. */
        -: 1482:/* #undef _GLIBCXX_HAVE__FINITE */
        -: 1483:
        -: 1484:/* Define to 1 if you have the `_finitef' function. */
        -: 1485:#define _GLIBCXX_HAVE__FINITEF 1
        -: 1486:
        -: 1487:/* Define to 1 if you have the `_finitel' function. */
        -: 1488:/* #undef _GLIBCXX_HAVE__FINITEL */
        -: 1489:
        -: 1490:/* Define to 1 if you have the `_floorf' function. */
        -: 1491:/* #undef _GLIBCXX_HAVE__FLOORF */
        -: 1492:
        -: 1493:/* Define to 1 if you have the `_floorl' function. */
        -: 1494:/* #undef _GLIBCXX_HAVE__FLOORL */
        -: 1495:
        -: 1496:/* Define to 1 if you have the `_fmodf' function. */
        -: 1497:/* #undef _GLIBCXX_HAVE__FMODF */
        -: 1498:
        -: 1499:/* Define to 1 if you have the `_fmodl' function. */
        -: 1500:/* #undef _GLIBCXX_HAVE__FMODL */
        -: 1501:
        -: 1502:/* Define to 1 if you have the `_fpclass' function. */
        -: 1503:/* #undef _GLIBCXX_HAVE__FPCLASS */
        -: 1504:
        -: 1505:/* Define to 1 if you have the `_frexpf' function. */
        -: 1506:/* #undef _GLIBCXX_HAVE__FREXPF */
        -: 1507:
        -: 1508:/* Define to 1 if you have the `_frexpl' function. */
        -: 1509:/* #undef _GLIBCXX_HAVE__FREXPL */
        -: 1510:
        -: 1511:/* Define to 1 if you have the `_hypot' function. */
        -: 1512:/* #undef _GLIBCXX_HAVE__HYPOT */
        -: 1513:
        -: 1514:/* Define to 1 if you have the `_hypotf' function. */
        -: 1515:/* #undef _GLIBCXX_HAVE__HYPOTF */
        -: 1516:
        -: 1517:/* Define to 1 if you have the `_hypotl' function. */
        -: 1518:/* #undef _GLIBCXX_HAVE__HYPOTL */
        -: 1519:
        -: 1520:/* Define to 1 if you have the `_isinf' function. */
        -: 1521:/* #undef _GLIBCXX_HAVE__ISINF */
        -: 1522:
        -: 1523:/* Define to 1 if you have the `_isinff' function. */
        -: 1524:/* #undef _GLIBCXX_HAVE__ISINFF */
        -: 1525:
        -: 1526:/* Define to 1 if you have the `_isinfl' function. */
        -: 1527:/* #undef _GLIBCXX_HAVE__ISINFL */
        -: 1528:
        -: 1529:/* Define to 1 if you have the `_isnan' function. */
        -: 1530:/* #undef _GLIBCXX_HAVE__ISNAN */
        -: 1531:
        -: 1532:/* Define to 1 if you have the `_isnanf' function. */
        -: 1533:#define _GLIBCXX_HAVE__ISNANF 1
        -: 1534:
        -: 1535:/* Define to 1 if you have the `_isnanl' function. */
        -: 1536:/* #undef _GLIBCXX_HAVE__ISNANL */
        -: 1537:
        -: 1538:/* Define to 1 if you have the `_ldexpf' function. */
        -: 1539:/* #undef _GLIBCXX_HAVE__LDEXPF */
        -: 1540:
        -: 1541:/* Define to 1 if you have the `_ldexpl' function. */
        -: 1542:/* #undef _GLIBCXX_HAVE__LDEXPL */
        -: 1543:
        -: 1544:/* Define to 1 if you have the `_log10f' function. */
        -: 1545:/* #undef _GLIBCXX_HAVE__LOG10F */
        -: 1546:
        -: 1547:/* Define to 1 if you have the `_log10l' function. */
        -: 1548:/* #undef _GLIBCXX_HAVE__LOG10L */
        -: 1549:
        -: 1550:/* Define to 1 if you have the `_logf' function. */
        -: 1551:/* #undef _GLIBCXX_HAVE__LOGF */
        -: 1552:
        -: 1553:/* Define to 1 if you have the `_logl' function. */
        -: 1554:/* #undef _GLIBCXX_HAVE__LOGL */
        -: 1555:
        -: 1556:/* Define to 1 if you have the `_modf' function. */
        -: 1557:/* #undef _GLIBCXX_HAVE__MODF */
        -: 1558:
        -: 1559:/* Define to 1 if you have the `_modff' function. */
        -: 1560:/* #undef _GLIBCXX_HAVE__MODFF */
        -: 1561:
        -: 1562:/* Define to 1 if you have the `_modfl' function. */
        -: 1563:/* #undef _GLIBCXX_HAVE__MODFL */
        -: 1564:
        -: 1565:/* Define to 1 if you have the `_powf' function. */
        -: 1566:/* #undef _GLIBCXX_HAVE__POWF */
        -: 1567:
        -: 1568:/* Define to 1 if you have the `_powl' function. */
        -: 1569:/* #undef _GLIBCXX_HAVE__POWL */
        -: 1570:
        -: 1571:/* Define to 1 if you have the `_qfpclass' function. */
        -: 1572:/* #undef _GLIBCXX_HAVE__QFPCLASS */
        -: 1573:
        -: 1574:/* Define to 1 if you have the `_sincos' function. */
        -: 1575:/* #undef _GLIBCXX_HAVE__SINCOS */
        -: 1576:
        -: 1577:/* Define to 1 if you have the `_sincosf' function. */
        -: 1578:/* #undef _GLIBCXX_HAVE__SINCOSF */
        -: 1579:
        -: 1580:/* Define to 1 if you have the `_sincosl' function. */
        -: 1581:/* #undef _GLIBCXX_HAVE__SINCOSL */
        -: 1582:
        -: 1583:/* Define to 1 if you have the `_sinf' function. */
        -: 1584:/* #undef _GLIBCXX_HAVE__SINF */
        -: 1585:
        -: 1586:/* Define to 1 if you have the `_sinhf' function. */
        -: 1587:/* #undef _GLIBCXX_HAVE__SINHF */
        -: 1588:
        -: 1589:/* Define to 1 if you have the `_sinhl' function. */
        -: 1590:/* #undef _GLIBCXX_HAVE__SINHL */
        -: 1591:
        -: 1592:/* Define to 1 if you have the `_sinl' function. */
        -: 1593:/* #undef _GLIBCXX_HAVE__SINL */
        -: 1594:
        -: 1595:/* Define to 1 if you have the `_sqrtf' function. */
        -: 1596:/* #undef _GLIBCXX_HAVE__SQRTF */
        -: 1597:
        -: 1598:/* Define to 1 if you have the `_sqrtl' function. */
        -: 1599:/* #undef _GLIBCXX_HAVE__SQRTL */
        -: 1600:
        -: 1601:/* Define to 1 if you have the `_tanf' function. */
        -: 1602:/* #undef _GLIBCXX_HAVE__TANF */
        -: 1603:
        -: 1604:/* Define to 1 if you have the `_tanhf' function. */
        -: 1605:/* #undef _GLIBCXX_HAVE__TANHF */
        -: 1606:
        -: 1607:/* Define to 1 if you have the `_tanhl' function. */
        -: 1608:/* #undef _GLIBCXX_HAVE__TANHL */
        -: 1609:
        -: 1610:/* Define to 1 if you have the `_tanl' function. */
        -: 1611:/* #undef _GLIBCXX_HAVE__TANL */
        -: 1612:
        -: 1613:/* Define to 1 if you have the `_wfopen' function. */
        -: 1614:#define _GLIBCXX_HAVE__WFOPEN 1
        -: 1615:
        -: 1616:/* Define to 1 if you have the `__cxa_thread_atexit' function. */
        -: 1617:/* #undef _GLIBCXX_HAVE___CXA_THREAD_ATEXIT */
        -: 1618:
        -: 1619:/* Define to 1 if you have the `__cxa_thread_atexit_impl' function. */
        -: 1620:/* #undef _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL */
        -: 1621:
        -: 1622:/* Define as const if the declaration of iconv() needs const. */
        -: 1623:/* #undef _GLIBCXX_ICONV_CONST */
        -: 1624:
        -: 1625:/* Define to the sub-directory in which libtool stores uninstalled libraries.
        -: 1626:   */
        -: 1627:#define _GLIBCXX_LT_OBJDIR ".libs/"
        -: 1628:
        -: 1629:/* Name of package */
        -: 1630:/* #undef _GLIBCXX_PACKAGE */
        -: 1631:
        -: 1632:/* Define to the address where bug reports for this package should be sent. */
        -: 1633:#define _GLIBCXX_PACKAGE_BUGREPORT ""
        -: 1634:
        -: 1635:/* Define to the full name of this package. */
        -: 1636:#define _GLIBCXX_PACKAGE_NAME "package-unused"
        -: 1637:
        -: 1638:/* Define to the full name and version of this package. */
        -: 1639:#define _GLIBCXX_PACKAGE_STRING "package-unused version-unused"
        -: 1640:
        -: 1641:/* Define to the one symbol short name of this package. */
        -: 1642:#define _GLIBCXX_PACKAGE_TARNAME "libstdc++"
        -: 1643:
        -: 1644:/* Define to the home page for this package. */
        -: 1645:#define _GLIBCXX_PACKAGE_URL ""
        -: 1646:
        -: 1647:/* Define to the version of this package. */
        -: 1648:#define _GLIBCXX_PACKAGE__GLIBCXX_VERSION "version-unused"
        -: 1649:
        -: 1650:/* Define to 1 if you have the ANSI C header files. */
        -: 1651:#define _GLIBCXX_STDC_HEADERS 1
        -: 1652:
        -: 1653:/* Version number of package */
        -: 1654:/* #undef _GLIBCXX_VERSION */
        -: 1655:
        -: 1656:/* Enable large inode numbers on Mac OS X 10.5.  */
        -: 1657:#ifndef _GLIBCXX_DARWIN_USE_64_BIT_INODE
        -: 1658:# define _GLIBCXX_DARWIN_USE_64_BIT_INODE 1
        -: 1659:#endif
        -: 1660:
        -: 1661:/* Number of bits in a file offset, on hosts where this is settable. */
        -: 1662:#define _GLIBCXX_FILE_OFFSET_BITS 64
        -: 1663:
        -: 1664:/* Define if C99 functions in <complex.h> should be used in <complex> for
        -: 1665:   C++11. Using compiler builtins for these functions requires corresponding
        -: 1666:   C99 library functions to be present. */
        -: 1667:#define _GLIBCXX11_USE_C99_COMPLEX 1
        -: 1668:
        -: 1669:/* Define if C99 functions or macros in <math.h> should be imported in <cmath>
        -: 1670:   in namespace std for C++11. */
        -: 1671:#define _GLIBCXX11_USE_C99_MATH 1
        -: 1672:
        -: 1673:/* Define if C99 functions or macros in <stdio.h> should be imported in
        -: 1674:   <cstdio> in namespace std for C++11. */
        -: 1675:#define _GLIBCXX11_USE_C99_STDIO 1
        -: 1676:
        -: 1677:/* Define if C99 functions or macros in <stdlib.h> should be imported in
        -: 1678:   <cstdlib> in namespace std for C++11. */
        -: 1679:#define _GLIBCXX11_USE_C99_STDLIB 1
        -: 1680:
        -: 1681:/* Define if C99 functions or macros in <wchar.h> should be imported in
        -: 1682:   <cwchar> in namespace std for C++11. */
        -: 1683:#define _GLIBCXX11_USE_C99_WCHAR 1
        -: 1684:
        -: 1685:/* Define if C99 functions in <complex.h> should be used in <complex> for
        -: 1686:   C++98. Using compiler builtins for these functions requires corresponding
        -: 1687:   C99 library functions to be present. */
        -: 1688:#define _GLIBCXX98_USE_C99_COMPLEX 1
        -: 1689:
        -: 1690:/* Define if C99 functions or macros in <math.h> should be imported in <cmath>
        -: 1691:   in namespace std for C++98. */
        -: 1692:#define _GLIBCXX98_USE_C99_MATH 1
        -: 1693:
        -: 1694:/* Define if C99 functions or macros in <stdio.h> should be imported in
        -: 1695:   <cstdio> in namespace std for C++98. */
        -: 1696:#define _GLIBCXX98_USE_C99_STDIO 1
        -: 1697:
        -: 1698:/* Define if C99 functions or macros in <stdlib.h> should be imported in
        -: 1699:   <cstdlib> in namespace std for C++98. */
        -: 1700:#define _GLIBCXX98_USE_C99_STDLIB 1
        -: 1701:
        -: 1702:/* Define if C99 functions or macros in <wchar.h> should be imported in
        -: 1703:   <cwchar> in namespace std for C++98. */
        -: 1704:#define _GLIBCXX98_USE_C99_WCHAR 1
        -: 1705:
        -: 1706:/* Define if the compiler supports C++11 atomics. */
        -: 1707:#define _GLIBCXX_ATOMIC_BUILTINS 1
        -: 1708:
        -: 1709:/* Define to use concept checking code from the boost libraries. */
        -: 1710:/* #undef _GLIBCXX_CONCEPT_CHECKS */
        -: 1711:
        -: 1712:/* Define to 1 if a fully dynamic basic_string is wanted, 0 to disable,
        -: 1713:   undefined for platform defaults */
        -: 1714:#define _GLIBCXX_FULLY_DYNAMIC_STRING 1
        -: 1715:
        -: 1716:/* Define if gthreads library is available. */
        -: 1717:#define _GLIBCXX_HAS_GTHREADS 1
        -: 1718:
        -: 1719:/* Define to 1 if a full hosted library is built, or 0 if freestanding. */
        -: 1720:#define _GLIBCXX_HOSTED __STDC_HOSTED__
        -: 1721:
        -: 1722:/* Define if compatibility should be provided for alternative 128-bit long
        -: 1723:   double formats. */
        -: 1724:
        -: 1725:/* Define if compatibility should be provided for -mlong-double-64. */
        -: 1726:
        -: 1727:/* Define to the letter to which size_t is mangled. */
        -: 1728:#define _GLIBCXX_MANGLE_SIZE_T y
        -: 1729:
        -: 1730:/* Define if C99 llrint and llround functions are missing from <math.h>. */
        -: 1731:/* #undef _GLIBCXX_NO_C99_ROUNDING_FUNCS */
        -: 1732:
        -: 1733:/* Defined if no way to sleep is available. */
        -: 1734:/* #undef _GLIBCXX_NO_SLEEP */
        -: 1735:
        -: 1736:/* Define if ptrdiff_t is int. */
        -: 1737:/* #undef _GLIBCXX_PTRDIFF_T_IS_INT */
        -: 1738:
        -: 1739:/* Define if using setrlimit to set resource limits during "make check" */
        -: 1740:/* #undef _GLIBCXX_RES_LIMITS */
        -: 1741:
        -: 1742:/* Define if size_t is unsigned int. */
        -: 1743:/* #undef _GLIBCXX_SIZE_T_IS_UINT */
        -: 1744:
        -: 1745:/* Define if static tzdata should be compiled into the library. */
        -: 1746:#define _GLIBCXX_STATIC_TZDATA 1
        -: 1747:
        -: 1748:/* Define to the value of the EOF integer constant. */
        -: 1749:#define _GLIBCXX_STDIO_EOF -1
        -: 1750:
        -: 1751:/* Define to the value of the SEEK_CUR integer constant. */
        -: 1752:#define _GLIBCXX_STDIO_SEEK_CUR 1
        -: 1753:
        -: 1754:/* Define to the value of the SEEK_END integer constant. */
        -: 1755:#define _GLIBCXX_STDIO_SEEK_END 2
        -: 1756:
        -: 1757:/* Define to use symbol versioning in the shared library. */
        -: 1758:/* #undef _GLIBCXX_SYMVER */
        -: 1759:
        -: 1760:/* Define to use darwin versioning in the shared library. */
        -: 1761:/* #undef _GLIBCXX_SYMVER_DARWIN */
        -: 1762:
        -: 1763:/* Define to use GNU versioning in the shared library. */
        -: 1764:/* #undef _GLIBCXX_SYMVER_GNU */
        -: 1765:
        -: 1766:/* Define to use GNU namespace versioning in the shared library. */
        -: 1767:/* #undef _GLIBCXX_SYMVER_GNU_NAMESPACE */
        -: 1768:
        -: 1769:/* Define to use Sun versioning in the shared library. */
        -: 1770:/* #undef _GLIBCXX_SYMVER_SUN */
        -: 1771:
        -: 1772:/* Define if C11 functions in <uchar.h> should be imported into namespace std
        -: 1773:   in <cuchar>. */
        -: 1774:/* #undef _GLIBCXX_USE_C11_UCHAR_CXX11 */
        -: 1775:
        -: 1776:/* Define if C99 functions or macros from <wchar.h>, <math.h>, <complex.h>,
        -: 1777:   <stdio.h>, and <stdlib.h> can be used or exposed. */
        -: 1778:#define _GLIBCXX_USE_C99 1
        -: 1779:
        -: 1780:/* Define if C99 functions in <complex.h> should be used in <tr1/complex>.
        -: 1781:   Using compiler builtins for these functions requires corresponding C99
        -: 1782:   library functions to be present. */
        -: 1783:#define _GLIBCXX_USE_C99_COMPLEX_TR1 1
        -: 1784:
        -: 1785:/* Define if C99 functions in <ctype.h> should be imported in <tr1/cctype> in
        -: 1786:   namespace std::tr1. */
        -: 1787:#define _GLIBCXX_USE_C99_CTYPE_TR1 1
        -: 1788:
        -: 1789:/* Define if C99 functions in <fenv.h> should be imported in <tr1/cfenv> in
        -: 1790:   namespace std::tr1. */
        -: 1791:#define _GLIBCXX_USE_C99_FENV_TR1 1
        -: 1792:
        -: 1793:/* Define if C99 functions in <inttypes.h> should be imported in
        -: 1794:   <tr1/cinttypes> in namespace std::tr1. */
        -: 1795:#define _GLIBCXX_USE_C99_INTTYPES_TR1 1
        -: 1796:
        -: 1797:/* Define if wchar_t C99 functions in <inttypes.h> should be imported in
        -: 1798:   <tr1/cinttypes> in namespace std::tr1. */
        -: 1799:#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 1
        -: 1800:
        -: 1801:/* Define if C99 functions or macros in <math.h> should be imported in
        -: 1802:   <tr1/cmath> in namespace std::tr1. */
        -: 1803:#define _GLIBCXX_USE_C99_MATH_TR1 1
        -: 1804:
        -: 1805:/* Define if C99 types in <stdint.h> should be imported in <tr1/cstdint> in
        -: 1806:   namespace std::tr1. */
        -: 1807:#define _GLIBCXX_USE_C99_STDINT_TR1 1
        -: 1808:
        -: 1809:/* Defined if clock_gettime syscall has monotonic and realtime clock support.
        -: 1810:   */
        -: 1811:/* #undef _GLIBCXX_USE_CLOCK_GETTIME_SYSCALL */
        -: 1812:
        -: 1813:/* Defined if clock_gettime has monotonic clock support. */
        -: 1814:#define _GLIBCXX_USE_CLOCK_MONOTONIC 1
        -: 1815:
        -: 1816:/* Defined if clock_gettime has realtime clock support. */
        -: 1817:#define _GLIBCXX_USE_CLOCK_REALTIME 1
        -: 1818:
        -: 1819:/* Define if ISO/IEC TR 24733 decimal floating point types are supported on
        -: 1820:   this host. */
        -: 1821:#define _GLIBCXX_USE_DECIMAL_FLOAT 1
        -: 1822:
        -: 1823:/* Define if /dev/random and /dev/urandom are available for
        -: 1824:   std::random_device. */
        -: 1825:/* #undef _GLIBCXX_USE_DEV_RANDOM */
        -: 1826:
        -: 1827:/* Define if fchmod is available in <sys/stat.h>. */
        -: 1828:/* #undef _GLIBCXX_USE_FCHMOD */
        -: 1829:
        -: 1830:/* Define if fchmodat is available in <sys/stat.h>. */
        -: 1831:/* #undef _GLIBCXX_USE_FCHMODAT */
        -: 1832:
        -: 1833:/* Defined if gettimeofday is available. */
        -: 1834:#define _GLIBCXX_USE_GETTIMEOFDAY 1
        -: 1835:
        -: 1836:/* Define if get_nprocs is available in <sys/sysinfo.h>. */
        -: 1837:/* #undef _GLIBCXX_USE_GET_NPROCS */
        -: 1838:
        -: 1839:/* Define if LFS support is available. */
        -: 1840:#define _GLIBCXX_USE_LFS 1
        -: 1841:
        -: 1842:/* Define if code specialized for long long should be used. */
        -: 1843:#define _GLIBCXX_USE_LONG_LONG 1
        -: 1844:
        -: 1845:/* Define if lstat is available in <sys/stat.h>. */
        -: 1846:/* #undef _GLIBCXX_USE_LSTAT */
        -: 1847:
        -: 1848:/* Defined if nanosleep is available. */
        -: 1849:#define _GLIBCXX_USE_NANOSLEEP 1
        -: 1850:
        -: 1851:/* Define if NLS translations are to be used. */
        -: 1852:/* #undef _GLIBCXX_USE_NLS */
        -: 1853:
        -: 1854:/* Define if pthreads_num_processors_np is available in <pthread.h>. */
        -: 1855:#define _GLIBCXX_USE_PTHREADS_NUM_PROCESSORS_NP 1
        -: 1856:
        -: 1857:/* Define if pthread_cond_clockwait is available in <pthread.h>. */
        -: 1858:/* #undef _GLIBCXX_USE_PTHREAD_COND_CLOCKWAIT */
        -: 1859:
        -: 1860:/* Define if pthread_mutex_clocklock is available in <pthread.h>. */
        -: 1861:/* #undef _GLIBCXX_USE_PTHREAD_MUTEX_CLOCKLOCK */
        -: 1862:
        -: 1863:/* Define if pthread_rwlock_clockrdlock and pthread_rwlock_clockwrlock are
        -: 1864:   available in <pthread.h>. */
        -: 1865:/* #undef _GLIBCXX_USE_PTHREAD_RWLOCK_CLOCKLOCK */
        -: 1866:
        -: 1867:/* Define if POSIX read/write locks are available in <gthr.h>. */
        -: 1868:#define _GLIBCXX_USE_PTHREAD_RWLOCK_T 1
        -: 1869:
        -: 1870:/* Define if /dev/random and /dev/urandom are available for the random_device
        -: 1871:   of TR1 (Chapter 5.1). */
        -: 1872:/* #undef _GLIBCXX_USE_RANDOM_TR1 */
        -: 1873:
        -: 1874:/* Define if usable realpath is available in <stdlib.h>. */
        -: 1875:/* #undef _GLIBCXX_USE_REALPATH */
        -: 1876:
        -: 1877:/* Defined if sched_yield is available. */
        -: 1878:#define _GLIBCXX_USE_SCHED_YIELD 1
        -: 1879:
        -: 1880:/* Define if _SC_NPROCESSORS_ONLN is available in <unistd.h>. */
        -: 1881:/* #undef _GLIBCXX_USE_SC_NPROCESSORS_ONLN */
        -: 1882:
        -: 1883:/* Define if _SC_NPROC_ONLN is available in <unistd.h>. */
        -: 1884:/* #undef _GLIBCXX_USE_SC_NPROC_ONLN */
        -: 1885:
        -: 1886:/* Define if sendfile is available in <sys/sendfile.h>. */
        -: 1887:/* #undef _GLIBCXX_USE_SENDFILE */
        -: 1888:
        -: 1889:/* Define to restrict std::__basic_file<> to stdio APIs. */
        -: 1890:/* #undef _GLIBCXX_USE_STDIO_PURE */
        -: 1891:
        -: 1892:/* Define if struct stat has timespec members. */
        -: 1893:/* #undef _GLIBCXX_USE_ST_MTIM */
        -: 1894:
        -: 1895:/* Define if sysctl(), CTL_HW and HW_NCPU are available in <sys/sysctl.h>. */
        -: 1896:/* #undef _GLIBCXX_USE_SYSCTL_HW_NCPU */
        -: 1897:
        -: 1898:/* Define if obsolescent tmpnam is available in <stdio.h>. */
        -: 1899:#define _GLIBCXX_USE_TMPNAM 1
        -: 1900:
        -: 1901:/* Define if c8rtomb and mbrtoc8 functions in <uchar.h> should be imported
        -: 1902:   into namespace std in <cuchar> for C++20. */
        -: 1903:/* #undef _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_CXX20 */
        -: 1904:
        -: 1905:/* Define if c8rtomb and mbrtoc8 functions in <uchar.h> should be imported
        -: 1906:   into namespace std in <cuchar> for -fchar8_t. */
        -: 1907:/* #undef _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_FCHAR8_T */
        -: 1908:
        -: 1909:/* Define if utime is available in <utime.h>. */
        -: 1910:#define _GLIBCXX_USE_UTIME 1
        -: 1911:
        -: 1912:/* Define if utimensat and UTIME_OMIT are available in <sys/stat.h> and
        -: 1913:   AT_FDCWD in <fcntl.h>. */
        -: 1914:/* #undef _GLIBCXX_USE_UTIMENSAT */
        -: 1915:
        -: 1916:/* Define if code specialized for wchar_t should be used. */
        -: 1917:#define _GLIBCXX_USE_WCHAR_T 1
        -: 1918:
        -: 1919:/* Defined if Sleep exists. */
        -: 1920:/* #undef _GLIBCXX_USE_WIN32_SLEEP */
        -: 1921:
        -: 1922:/* Define to 1 if a verbose library is built, or 0 otherwise. */
        -: 1923:#define _GLIBCXX_VERBOSE 1
        -: 1924:
        -: 1925:/* Defined if as can handle rdrand. */
        -: 1926:#define _GLIBCXX_X86_RDRAND 1
        -: 1927:
        -: 1928:/* Defined if as can handle rdseed. */
        -: 1929:#define _GLIBCXX_X86_RDSEED 1
        -: 1930:
        -: 1931:/* Define if a directory should be searched for tzdata files. */
        -: 1932:/* #undef _GLIBCXX_ZONEINFO_DIR */
        -: 1933:
        -: 1934:/* Define to 1 if mutex_timedlock is available. */
        -: 1935:#define _GTHREAD_USE_MUTEX_TIMEDLOCK 1
        -: 1936:
        -: 1937:/* Define for large files, on AIX-style hosts. */
        -: 1938:/* #undef _GLIBCXX_LARGE_FILES */
        -: 1939:
        -: 1940:/* Define if all C++11 floating point overloads are available in <math.h>.  */
        -: 1941:#if __cplusplus >= 201103L
        -: 1942:/* #undef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP */
        -: 1943:#endif
        -: 1944:
        -: 1945:/* Define if all C++11 integral type overloads are available in <math.h>.  */
        -: 1946:#if __cplusplus >= 201103L
        -: 1947:/* #undef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT */
        -: 1948:#endif
        -: 1949:
        -: 1950:#if defined (_GLIBCXX_HAVE__ACOSF) && ! defined (_GLIBCXX_HAVE_ACOSF)
        -: 1951:# define _GLIBCXX_HAVE_ACOSF 1
        -: 1952:# define acosf _acosf
        -: 1953:#endif
        -: 1954:
        -: 1955:#if defined (_GLIBCXX_HAVE__ACOSL) && ! defined (_GLIBCXX_HAVE_ACOSL)
        -: 1956:# define _GLIBCXX_HAVE_ACOSL 1
        -: 1957:# define acosl _acosl
        -: 1958:#endif
        -: 1959:
        -: 1960:#if defined (_GLIBCXX_HAVE__ASINF) && ! defined (_GLIBCXX_HAVE_ASINF)
        -: 1961:# define _GLIBCXX_HAVE_ASINF 1
        -: 1962:# define asinf _asinf
        -: 1963:#endif
        -: 1964:
        -: 1965:#if defined (_GLIBCXX_HAVE__ASINL) && ! defined (_GLIBCXX_HAVE_ASINL)
        -: 1966:# define _GLIBCXX_HAVE_ASINL 1
        -: 1967:# define asinl _asinl
        -: 1968:#endif
        -: 1969:
        -: 1970:#if defined (_GLIBCXX_HAVE__ATAN2F) && ! defined (_GLIBCXX_HAVE_ATAN2F)
        -: 1971:# define _GLIBCXX_HAVE_ATAN2F 1
        -: 1972:# define atan2f _atan2f
        -: 1973:#endif
        -: 1974:
        -: 1975:#if defined (_GLIBCXX_HAVE__ATAN2L) && ! defined (_GLIBCXX_HAVE_ATAN2L)
        -: 1976:# define _GLIBCXX_HAVE_ATAN2L 1
        -: 1977:# define atan2l _atan2l
        -: 1978:#endif
        -: 1979:
        -: 1980:#if defined (_GLIBCXX_HAVE__ATANF) && ! defined (_GLIBCXX_HAVE_ATANF)
        -: 1981:# define _GLIBCXX_HAVE_ATANF 1
        -: 1982:# define atanf _atanf
        -: 1983:#endif
        -: 1984:
        -: 1985:#if defined (_GLIBCXX_HAVE__ATANL) && ! defined (_GLIBCXX_HAVE_ATANL)
        -: 1986:# define _GLIBCXX_HAVE_ATANL 1
        -: 1987:# define atanl _atanl
        -: 1988:#endif
        -: 1989:
        -: 1990:#if defined (_GLIBCXX_HAVE__CEILF) && ! defined (_GLIBCXX_HAVE_CEILF)
        -: 1991:# define _GLIBCXX_HAVE_CEILF 1
        -: 1992:# define ceilf _ceilf
        -: 1993:#endif
        -: 1994:
        -: 1995:#if defined (_GLIBCXX_HAVE__CEILL) && ! defined (_GLIBCXX_HAVE_CEILL)
        -: 1996:# define _GLIBCXX_HAVE_CEILL 1
        -: 1997:# define ceill _ceill
        -: 1998:#endif
        -: 1999:
        -: 2000:#if defined (_GLIBCXX_HAVE__COSF) && ! defined (_GLIBCXX_HAVE_COSF)
        -: 2001:# define _GLIBCXX_HAVE_COSF 1
        -: 2002:# define cosf _cosf
        -: 2003:#endif
        -: 2004:
        -: 2005:#if defined (_GLIBCXX_HAVE__COSHF) && ! defined (_GLIBCXX_HAVE_COSHF)
        -: 2006:# define _GLIBCXX_HAVE_COSHF 1
        -: 2007:# define coshf _coshf
        -: 2008:#endif
        -: 2009:
        -: 2010:#if defined (_GLIBCXX_HAVE__COSHL) && ! defined (_GLIBCXX_HAVE_COSHL)
        -: 2011:# define _GLIBCXX_HAVE_COSHL 1
        -: 2012:# define coshl _coshl
        -: 2013:#endif
        -: 2014:
        -: 2015:#if defined (_GLIBCXX_HAVE__COSL) && ! defined (_GLIBCXX_HAVE_COSL)
        -: 2016:# define _GLIBCXX_HAVE_COSL 1
        -: 2017:# define cosl _cosl
        -: 2018:#endif
        -: 2019:
        -: 2020:#if defined (_GLIBCXX_HAVE__EXPF) && ! defined (_GLIBCXX_HAVE_EXPF)
        -: 2021:# define _GLIBCXX_HAVE_EXPF 1
        -: 2022:# define expf _expf
        -: 2023:#endif
        -: 2024:
        -: 2025:#if defined (_GLIBCXX_HAVE__EXPL) && ! defined (_GLIBCXX_HAVE_EXPL)
        -: 2026:# define _GLIBCXX_HAVE_EXPL 1
        -: 2027:# define expl _expl
        -: 2028:#endif
        -: 2029:
        -: 2030:#if defined (_GLIBCXX_HAVE__FABSF) && ! defined (_GLIBCXX_HAVE_FABSF)
        -: 2031:# define _GLIBCXX_HAVE_FABSF 1
        -: 2032:# define fabsf _fabsf
        -: 2033:#endif
        -: 2034:
        -: 2035:#if defined (_GLIBCXX_HAVE__FABSL) && ! defined (_GLIBCXX_HAVE_FABSL)
        -: 2036:# define _GLIBCXX_HAVE_FABSL 1
        -: 2037:# define fabsl _fabsl
        -: 2038:#endif
        -: 2039:
        -: 2040:#if defined (_GLIBCXX_HAVE__FINITE) && ! defined (_GLIBCXX_HAVE_FINITE)
        -: 2041:# define _GLIBCXX_HAVE_FINITE 1
        -: 2042:# define finite _finite
        -: 2043:#endif
        -: 2044:
        -: 2045:#if defined (_GLIBCXX_HAVE__FINITEF) && ! defined (_GLIBCXX_HAVE_FINITEF)
        -: 2046:# define _GLIBCXX_HAVE_FINITEF 1
        -: 2047:# define finitef _finitef
        -: 2048:#endif
        -: 2049:
        -: 2050:#if defined (_GLIBCXX_HAVE__FINITEL) && ! defined (_GLIBCXX_HAVE_FINITEL)
        -: 2051:# define _GLIBCXX_HAVE_FINITEL 1
        -: 2052:# define finitel _finitel
        -: 2053:#endif
        -: 2054:
        -: 2055:#if defined (_GLIBCXX_HAVE__FLOORF) && ! defined (_GLIBCXX_HAVE_FLOORF)
        -: 2056:# define _GLIBCXX_HAVE_FLOORF 1
        -: 2057:# define floorf _floorf
        -: 2058:#endif
        -: 2059:
        -: 2060:#if defined (_GLIBCXX_HAVE__FLOORL) && ! defined (_GLIBCXX_HAVE_FLOORL)
        -: 2061:# define _GLIBCXX_HAVE_FLOORL 1
        -: 2062:# define floorl _floorl
        -: 2063:#endif
        -: 2064:
        -: 2065:#if defined (_GLIBCXX_HAVE__FMODF) && ! defined (_GLIBCXX_HAVE_FMODF)
        -: 2066:# define _GLIBCXX_HAVE_FMODF 1
        -: 2067:# define fmodf _fmodf
        -: 2068:#endif
        -: 2069:
        -: 2070:#if defined (_GLIBCXX_HAVE__FMODL) && ! defined (_GLIBCXX_HAVE_FMODL)
        -: 2071:# define _GLIBCXX_HAVE_FMODL 1
        -: 2072:# define fmodl _fmodl
        -: 2073:#endif
        -: 2074:
        -: 2075:#if defined (_GLIBCXX_HAVE__FPCLASS) && ! defined (_GLIBCXX_HAVE_FPCLASS)
        -: 2076:# define _GLIBCXX_HAVE_FPCLASS 1
        -: 2077:# define fpclass _fpclass
        -: 2078:#endif
        -: 2079:
        -: 2080:#if defined (_GLIBCXX_HAVE__FREXPF) && ! defined (_GLIBCXX_HAVE_FREXPF)
        -: 2081:# define _GLIBCXX_HAVE_FREXPF 1
        -: 2082:# define frexpf _frexpf
        -: 2083:#endif
        -: 2084:
        -: 2085:#if defined (_GLIBCXX_HAVE__FREXPL) && ! defined (_GLIBCXX_HAVE_FREXPL)
        -: 2086:# define _GLIBCXX_HAVE_FREXPL 1
        -: 2087:# define frexpl _frexpl
        -: 2088:#endif
        -: 2089:
        -: 2090:#if defined (_GLIBCXX_HAVE__HYPOT) && ! defined (_GLIBCXX_HAVE_HYPOT)
        -: 2091:# define _GLIBCXX_HAVE_HYPOT 1
        -: 2092:# define hypot _hypot
        -: 2093:#endif
        -: 2094:
        -: 2095:#if defined (_GLIBCXX_HAVE__HYPOTF) && ! defined (_GLIBCXX_HAVE_HYPOTF)
        -: 2096:# define _GLIBCXX_HAVE_HYPOTF 1
        -: 2097:# define hypotf _hypotf
        -: 2098:#endif
        -: 2099:
        -: 2100:#if defined (_GLIBCXX_HAVE__HYPOTL) && ! defined (_GLIBCXX_HAVE_HYPOTL)
        -: 2101:# define _GLIBCXX_HAVE_HYPOTL 1
        -: 2102:# define hypotl _hypotl
        -: 2103:#endif
        -: 2104:
        -: 2105:#if defined (_GLIBCXX_HAVE__ISINF) && ! defined (_GLIBCXX_HAVE_ISINF)
        -: 2106:# define _GLIBCXX_HAVE_ISINF 1
        -: 2107:# define isinf _isinf
        -: 2108:#endif
        -: 2109:
        -: 2110:#if defined (_GLIBCXX_HAVE__ISINFF) && ! defined (_GLIBCXX_HAVE_ISINFF)
        -: 2111:# define _GLIBCXX_HAVE_ISINFF 1
        -: 2112:# define isinff _isinff
        -: 2113:#endif
        -: 2114:
        -: 2115:#if defined (_GLIBCXX_HAVE__ISINFL) && ! defined (_GLIBCXX_HAVE_ISINFL)
        -: 2116:# define _GLIBCXX_HAVE_ISINFL 1
        -: 2117:# define isinfl _isinfl
        -: 2118:#endif
        -: 2119:
        -: 2120:#if defined (_GLIBCXX_HAVE__ISNAN) && ! defined (_GLIBCXX_HAVE_ISNAN)
        -: 2121:# define _GLIBCXX_HAVE_ISNAN 1
        -: 2122:# define isnan _isnan
        -: 2123:#endif
        -: 2124:
        -: 2125:#if defined (_GLIBCXX_HAVE__ISNANF) && ! defined (_GLIBCXX_HAVE_ISNANF)
        -: 2126:# define _GLIBCXX_HAVE_ISNANF 1
        -: 2127:# define isnanf _isnanf
        -: 2128:#endif
        -: 2129:
        -: 2130:#if defined (_GLIBCXX_HAVE__ISNANL) && ! defined (_GLIBCXX_HAVE_ISNANL)
        -: 2131:# define _GLIBCXX_HAVE_ISNANL 1
        -: 2132:# define isnanl _isnanl
        -: 2133:#endif
        -: 2134:
        -: 2135:#if defined (_GLIBCXX_HAVE__LDEXPF) && ! defined (_GLIBCXX_HAVE_LDEXPF)
        -: 2136:# define _GLIBCXX_HAVE_LDEXPF 1
        -: 2137:# define ldexpf _ldexpf
        -: 2138:#endif
        -: 2139:
        -: 2140:#if defined (_GLIBCXX_HAVE__LDEXPL) && ! defined (_GLIBCXX_HAVE_LDEXPL)
        -: 2141:# define _GLIBCXX_HAVE_LDEXPL 1
        -: 2142:# define ldexpl _ldexpl
        -: 2143:#endif
        -: 2144:
        -: 2145:#if defined (_GLIBCXX_HAVE__LOG10F) && ! defined (_GLIBCXX_HAVE_LOG10F)
        -: 2146:# define _GLIBCXX_HAVE_LOG10F 1
        -: 2147:# define log10f _log10f
        -: 2148:#endif
        -: 2149:
        -: 2150:#if defined (_GLIBCXX_HAVE__LOG10L) && ! defined (_GLIBCXX_HAVE_LOG10L)
        -: 2151:# define _GLIBCXX_HAVE_LOG10L 1
        -: 2152:# define log10l _log10l
        -: 2153:#endif
        -: 2154:
        -: 2155:#if defined (_GLIBCXX_HAVE__LOGF) && ! defined (_GLIBCXX_HAVE_LOGF)
        -: 2156:# define _GLIBCXX_HAVE_LOGF 1
        -: 2157:# define logf _logf
        -: 2158:#endif
        -: 2159:
        -: 2160:#if defined (_GLIBCXX_HAVE__LOGL) && ! defined (_GLIBCXX_HAVE_LOGL)
        -: 2161:# define _GLIBCXX_HAVE_LOGL 1
        -: 2162:# define logl _logl
        -: 2163:#endif
        -: 2164:
        -: 2165:#if defined (_GLIBCXX_HAVE__MODF) && ! defined (_GLIBCXX_HAVE_MODF)
        -: 2166:# define _GLIBCXX_HAVE_MODF 1
        -: 2167:# define modf _modf
        -: 2168:#endif
        -: 2169:
        -: 2170:#if defined (_GLIBCXX_HAVE__MODFF) && ! defined (_GLIBCXX_HAVE_MODFF)
        -: 2171:# define _GLIBCXX_HAVE_MODFF 1
        -: 2172:# define modff _modff
        -: 2173:#endif
        -: 2174:
        -: 2175:#if defined (_GLIBCXX_HAVE__MODFL) && ! defined (_GLIBCXX_HAVE_MODFL)
        -: 2176:# define _GLIBCXX_HAVE_MODFL 1
        -: 2177:# define modfl _modfl
        -: 2178:#endif
        -: 2179:
        -: 2180:#if defined (_GLIBCXX_HAVE__POWF) && ! defined (_GLIBCXX_HAVE_POWF)
        -: 2181:# define _GLIBCXX_HAVE_POWF 1
        -: 2182:# define powf _powf
        -: 2183:#endif
        -: 2184:
        -: 2185:#if defined (_GLIBCXX_HAVE__POWL) && ! defined (_GLIBCXX_HAVE_POWL)
        -: 2186:# define _GLIBCXX_HAVE_POWL 1
        -: 2187:# define powl _powl
        -: 2188:#endif
        -: 2189:
        -: 2190:#if defined (_GLIBCXX_HAVE__QFPCLASS) && ! defined (_GLIBCXX_HAVE_QFPCLASS)
        -: 2191:# define _GLIBCXX_HAVE_QFPCLASS 1
        -: 2192:# define qfpclass _qfpclass
        -: 2193:#endif
        -: 2194:
        -: 2195:#if defined (_GLIBCXX_HAVE__SINCOS) && ! defined (_GLIBCXX_HAVE_SINCOS)
        -: 2196:# define _GLIBCXX_HAVE_SINCOS 1
        -: 2197:# define sincos _sincos
        -: 2198:#endif
        -: 2199:
        -: 2200:#if defined (_GLIBCXX_HAVE__SINCOSF) && ! defined (_GLIBCXX_HAVE_SINCOSF)
        -: 2201:# define _GLIBCXX_HAVE_SINCOSF 1
        -: 2202:# define sincosf _sincosf
        -: 2203:#endif
        -: 2204:
        -: 2205:#if defined (_GLIBCXX_HAVE__SINCOSL) && ! defined (_GLIBCXX_HAVE_SINCOSL)
        -: 2206:# define _GLIBCXX_HAVE_SINCOSL 1
        -: 2207:# define sincosl _sincosl
        -: 2208:#endif
        -: 2209:
        -: 2210:#if defined (_GLIBCXX_HAVE__SINF) && ! defined (_GLIBCXX_HAVE_SINF)
        -: 2211:# define _GLIBCXX_HAVE_SINF 1
        -: 2212:# define sinf _sinf
        -: 2213:#endif
        -: 2214:
        -: 2215:#if defined (_GLIBCXX_HAVE__SINHF) && ! defined (_GLIBCXX_HAVE_SINHF)
        -: 2216:# define _GLIBCXX_HAVE_SINHF 1
        -: 2217:# define sinhf _sinhf
        -: 2218:#endif
        -: 2219:
        -: 2220:#if defined (_GLIBCXX_HAVE__SINHL) && ! defined (_GLIBCXX_HAVE_SINHL)
        -: 2221:# define _GLIBCXX_HAVE_SINHL 1
        -: 2222:# define sinhl _sinhl
        -: 2223:#endif
        -: 2224:
        -: 2225:#if defined (_GLIBCXX_HAVE__SINL) && ! defined (_GLIBCXX_HAVE_SINL)
        -: 2226:# define _GLIBCXX_HAVE_SINL 1
        -: 2227:# define sinl _sinl
        -: 2228:#endif
        -: 2229:
        -: 2230:#if defined (_GLIBCXX_HAVE__SQRTF) && ! defined (_GLIBCXX_HAVE_SQRTF)
        -: 2231:# define _GLIBCXX_HAVE_SQRTF 1
        -: 2232:# define sqrtf _sqrtf
        -: 2233:#endif
        -: 2234:
        -: 2235:#if defined (_GLIBCXX_HAVE__SQRTL) && ! defined (_GLIBCXX_HAVE_SQRTL)
        -: 2236:# define _GLIBCXX_HAVE_SQRTL 1
        -: 2237:# define sqrtl _sqrtl
        -: 2238:#endif
        -: 2239:
        -: 2240:#if defined (_GLIBCXX_HAVE__STRTOF) && ! defined (_GLIBCXX_HAVE_STRTOF)
        -: 2241:# define _GLIBCXX_HAVE_STRTOF 1
        -: 2242:# define strtof _strtof
        -: 2243:#endif
        -: 2244:
        -: 2245:#if defined (_GLIBCXX_HAVE__STRTOLD) && ! defined (_GLIBCXX_HAVE_STRTOLD)
        -: 2246:# define _GLIBCXX_HAVE_STRTOLD 1
        -: 2247:# define strtold _strtold
        -: 2248:#endif
        -: 2249:
        -: 2250:#if defined (_GLIBCXX_HAVE__TANF) && ! defined (_GLIBCXX_HAVE_TANF)
        -: 2251:# define _GLIBCXX_HAVE_TANF 1
        -: 2252:# define tanf _tanf
        -: 2253:#endif
        -: 2254:
        -: 2255:#if defined (_GLIBCXX_HAVE__TANHF) && ! defined (_GLIBCXX_HAVE_TANHF)
        -: 2256:# define _GLIBCXX_HAVE_TANHF 1
        -: 2257:# define tanhf _tanhf
        -: 2258:#endif
        -: 2259:
        -: 2260:#if defined (_GLIBCXX_HAVE__TANHL) && ! defined (_GLIBCXX_HAVE_TANHL)
        -: 2261:# define _GLIBCXX_HAVE_TANHL 1
        -: 2262:# define tanhl _tanhl
        -: 2263:#endif
        -: 2264:
        -: 2265:#if defined (_GLIBCXX_HAVE__TANL) && ! defined (_GLIBCXX_HAVE_TANL)
        -: 2266:# define _GLIBCXX_HAVE_TANL 1
        -: 2267:# define tanl _tanl
        -: 2268:#endif
        -: 2269:
        -: 2270:#endif // _GLIBCXX_CXX_CONFIG_H
